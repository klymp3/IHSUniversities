<?xml version="1.0"?>
<doc>
  <assembly>
    <name>IronWord.APIWrapper</name>
  </assembly>
  <members>
  </members>
  <assembly>
    <name>IronWord.Models</name>
  </assembly>
  <members>
    <member name="T:IronWord.Models.Abstract.ContentElement">
      <summary>
            Represents a base class for all content elements in the content model.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.ContentElement.Range">
      <summary>
            Gets the range of the element within the content model.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.ContentElement.Parent">
      <summary>
            Gets the parent element of this element.
            </summary>
    </member>
    <member name="F:IronWord.Models.Abstract.ContentElement.Status">
      <summary>
            Gets or sets the status of the element, indicating whether it is new, updated, or deleted.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.ContentElement.#ctor">
      <summary>
            Initializes a new instance of the ContentElement class.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.ContentElement.Replace(IronWord.Models.Abstract.ContentElement)">
      <summary>
            Replaces the current element with a new child element into same position within parent.
            </summary>
      <param name="newChild">The new child element to replace the current element.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.ContentElement.Remove">
      <summary>
            Marks this element as deleted.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.ContentElement.SetParent(IronWord.Models.Abstract.ParentElement)">
      <summary>
            Sets the parent of the current content element.
            </summary>
      <param name="parent">The parent content element to set.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.ContentElement.GetIndex``1">
      <summary>
            Creates a deep copy of the content element.
            </summary>
      <returns>A new instance of the content element with all properties and child elements copied.</returns>
      <summary>
            Gets the index of this element within its parent's list of child elements of the same type.
            </summary>
      <typeparam name="T">The type of the element and its siblings.</typeparam>
      <returns>The index of this element, or 0 if it has no parent.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.ContentElement.Clone">
      <summary>
            Creates a copy of the ContentElement.
            </summary>
      <returns>A new instance of the Shape with all properties copied.</returns>
    </member>
    <member name="T:IronWord.Models.Abstract.FormElement">
      <summary>
            Represents an abstract base class for different types of form elements within a form.
            </summary>
    </member>
    <member name="T:IronWord.Models.Abstract.Interfaces.IContentElement">
      <summary>
            Represents an element that can contain and manage child content elements.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.IContentElement.Children">
      <summary>
            Gets or sets the list of child content elements.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.IContentElement.Parent">
      <summary>
            Gets the parent content element.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IContentElement.AddChild(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Adds one or more child content elements to the current content element.
            </summary>
      <param name="children">The content elements to be added as children.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IContentElement.Clone">
      <summary>
            Creates a deep copy of the content element.
            </summary>
      <returns>A new instance of the content element with all properties and child elements copied.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IContentElement.ExtractElements``1">
      <summary>
            Extracts elements of a specified type from the child content elements.
            </summary>
      <typeparam name="T">The type of content element to extract.</typeparam>
      <returns>A list of content elements of the specified type.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IContentElement.GetChildByIndex``1(System.Int32)">
      <summary>
            Gets the child content element at the specified index and of the specified type.
            </summary>
      <typeparam name="T">The type of content element to retrieve.</typeparam>
      <param name="index">The index of the child content element.</param>
      <returns>The child content element at the specified index and of the specified type.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IContentElement.InsertChildToIndex(System.Int32,IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Inserts one or more child content elements at the specified index.
            </summary>
      <param name="index">The index at which the child content elements should be inserted.</param>
      <param name="children">The content elements to be inserted.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IContentElement.Remove">
      <summary>
            Removes the current content element from its parent.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IContentElement.RemoveAllChildren">
      <summary>
            Removes all child content elements from the current content element.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IContentElement.RemoveChildren(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Removes specified child content elements from the current content element.
            </summary>
      <param name="children">The content elements to be removed.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IContentElement.Replace(IronWord.Models.Abstract.ContentElement)">
      <summary>
            Replaces the current content element with a new child content element.
            </summary>
      <param name="newChild">The new child content element to replace the current element.</param>
    </member>
    <member name="T:IronWord.Models.Abstract.Interfaces.IDrawContainer">
      <summary>
            Represents a container that can hold drawings such as images and shapes.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.IDrawContainer.Images">
      <summary>
            Gets the list of Image elements contained in the draw container.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.IDrawContainer.Shapes">
      <summary>
            Gets the list of Shape elements contained in the draw container.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IDrawContainer.AddShape(IronWord.Models.Shape)">
      <summary>
            Adds a Shape to the draw container.
            </summary>
      <param name="shape">The Shape to be added.</param>
      <returns>The added Shape.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IDrawContainer.AddImage(IronWord.Models.Image)">
      <summary>
            Adds an Image to the draw container.
            </summary>
      <param name="image">The Image to be added.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IDrawContainer.AddImage(System.IO.Stream)">
      <summary>
            Adds an Image to the draw container from a stream.
            </summary>
      <param name="imageStream">The stream containing the Image data.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IDrawContainer.AddImage(System.String)">
      <summary>
            Adds an Image to the draw container from a file path.
            </summary>
      <param name="imagePath">The file path of the Image.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IDrawContainer.AddImage(IronSoftware.Drawing.AnyBitmap)">
      <summary>
            Adds an Image to the draw container from an AnyBitmap instance.
            </summary>
      <param name="anyBitmap">The AnyBitmap instance containing the Image data.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="T:IronWord.Models.Abstract.Interfaces.IElementContainer">
      <summary>
            Represents a container for various document elements, including text, drawings, paragraphs, tables, and multi-level text lists.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.IElementContainer.Paragraphs">
      <summary>
            Gets the list of Paragraph elements contained in the element container.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.IElementContainer.Tables">
      <summary>
            Gets the list of Table elements contained in the element container.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.IElementContainer.MultiLevelTextLists">
      <summary>
            Gets the list of MultiLevelTextList elements contained in the element container.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IElementContainer.AddMultiLevelTextList(IronWord.Models.MultiLevelTextList)">
      <summary>
            Adds a MultiLevelTextList to the element container.
            </summary>
      <param name="multiLevelTextList">The MultiLevelTextList to be added.</param>
      <returns>The added MultiLevelTextList.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IElementContainer.AddParagraph(IronWord.Models.Paragraph)">
      <summary>
            Adds a Paragraph to the element container.
            </summary>
      <param name="paragraph">The Paragraph to be added.</param>
      <returns>The added Paragraph.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.IElementContainer.AddTable(IronWord.Models.Table)">
      <summary>
            Adds a Table to the element container.
            </summary>
      <param name="table">The Table to be added.</param>
      <returns>The added Table.</returns>
    </member>
    <member name="T:IronWord.Models.Abstract.Interfaces.ITextContainer">
      <summary>
            Represents a container for text elements.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.ITextContainer.Texts">
      <summary>
            Gets the list of Run elements contained in the text container.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.ITextContainer.AddText(System.String)">
      <summary>
            Adds a Run with the specified text to the text container.
            </summary>
      <param name="text">The text content of the Run to be added.</param>
      <returns>The added Run.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.ITextContainer.AddText(IronWord.Models.Text)">
      <summary>
            Adds a pre-existing Run to the text container.
            </summary>
      <param name="Run">The Run to be added.</param>
      <returns>The added Run.</returns>
    </member>
    <member name="T:IronWord.Models.Abstract.Interfaces.ITextContentElement">
      <summary>
            Represents an element with text content that can be searched, replaced, and converted to a string.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.ITextContentElement.Style">
      <summary>
            Gets or sets the style of the text content.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.Interfaces.ITextContentElement.Text">
      <summary>
            Gets or sets the text content.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.ITextContentElement.Find(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Boolean,System.Boolean)">
      <summary>
            Finds the indices of the specified search text within the text content.
            </summary>
      <param name="searchText">The text to search for.</param>
      <param name="regexOption">Optional. The regular expression options.</param>
      <param name="wholeWordOnly">Optional. Indicates whether to match the whole word only.</param>
      <param name="caseSensitive">Optional. Indicates whether the search is case-sensitive.</param>
      <returns>A list of indices where the search text is found.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.ITextContentElement.Replace(System.String,System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Boolean,System.Boolean)">
      <summary>
            Replaces occurrences of the specified search text with the specified replacement text within the text content.
            </summary>
      <param name="searchText">The text to search for.</param>
      <param name="replaceText">The text to replace occurrences of the search text.</param>
      <param name="regexOption">Optional. The regular expression options.</param>
      <param name="wholeWordOnly">Optional. Indicates whether to match the whole word only.</param>
      <param name="caseSensitive">Optional. Indicates whether the search is case-sensitive.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.Interfaces.ITextContentElement.ToString">
      <summary>
            Converts the text content element to its string representation.
            </summary>
      <returns>A string representation of the text content element.</returns>
    </member>
    <member name="T:IronWord.Models.Abstract.ParentElement">
      <summary>
            Represents the base class for  ContentElements which have children.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.ParentElement.Children">
      <summary>
            Gets the list of child elements contained within this element.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.#ctor">
      <summary>
            Initializes a new instance of the ContentElement class.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.#ctor(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Initializes a new instance of the ContentElement class with the specified child elements.
            </summary>
      <param name="children">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.AddChild(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Adds the specified child elements to this element.
            </summary>
      <param name="children">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.InsertChildToIndex(System.Int32,IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Inserts the specified child elements at the specified index.
            </summary>
      <param name="index">The index at which to insert the children.</param>
      <param name="children">The child elements to be inserted.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.Remove">
      <summary>
            Marks this element as deleted.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.RemoveChildren(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Removes the specified child elements from this element.
            </summary>
      <param name="children">The child elements to be removed.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.RemoveAllChildren">
      <summary>
            Removes all child elements from this element.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.ExtractElements``1">
      <summary>
            Extracts all child elements of a specific type from this element.
            </summary>
      <typeparam name="T">The type of child element to extract.</typeparam>
      <returns>A list of child elements of the specified type.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.GetChildByIndex``1(System.Int32)">
      <summary>
            Gets the child element at the specified index, cast to the specified type.
            </summary>
      <typeparam name="T">The type of the child element to retrieve.</typeparam>
      <param name="index">The index of the child element.</param>
      <returns>The child element at the specified index.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.Clone">
      <summary>
            Creates a deep copy of the Element.
            </summary>
      <returns>A new instance of the Image with all properties copied.</returns>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.CloneElement``1(``0)">
      <summary>
            Creates a deep copy of the specified original element.
            </summary>
      <typeparam name="T">The type of the original element.</typeparam>
      <param name="original">The original element to clone.</param>
      <returns>A new instance of the element with all properties and child elements copied.</returns>
      <remarks>
            This method is used to clone elements that implement the <see cref="T:IronWord.Models.Abstract.ContentElement" /> interface.
            </remarks>
    </member>
    <member name="M:IronWord.Models.Abstract.ParentElement.LogObjectTree">
      <summary>
            Initiates logging of the object tree by traversing from the current object.
            </summary>
    </member>
    <member name="T:IronWord.Models.Abstract.TableElements">
      <summary>
            Represents the base class for all table elements in the content model.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.TableElements.Borders">
      <summary>
            Gets or sets the border styles for the table element.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.TableElements.BackgroundColor">
      <summary>
            Gets or sets the background color of the table element.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.TableElements.SetBorders(IronWord.Models.TableBorders)">
      <summary>
            Sets the border styles for the table element.
            </summary>
      <param name="borders">The border styles to apply.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.TextContainer.AddChild(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Adds one or more child content elements to the current content element.
            </summary>
      <param name="children">The content elements to be added as children.</param>
    </member>
    <member name="M:IronWord.Models.Abstract.TextContainer.AddText(IronWord.Models.Text)">
      <summary>
            Adds a new Run to this paragraph.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.TextContainer.AddText(System.String)">
      <summary>
            Adds a new Text to this paragraph.
            </summary>
    </member>
    <member name="T:IronWord.Models.Abstract.TextContentElement">
      <summary>
            Represents the base class for all text content elements in the content model.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.TextContentElement.Text">
      <summary>
            Gets or sets the text content of the Run.
            </summary>
    </member>
    <member name="P:IronWord.Models.Abstract.TextContentElement.Style">
      <summary>
            style for newly added text.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.TextContentElement.#ctor">
      <summary>
            Initializes a new instance of the TextContentElement.
            </summary>
    </member>
    <member name="M:IronWord.Models.Abstract.TextContentElement.Replace(System.String,System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Boolean,System.Boolean)">
      <summary>
            Finds and replaces text within this TextContentElement.
            </summary>
      <param name="searchText">The text to search for.</param>
      <param name="replaceText">The text to replace with.</param>
      <param name="regexOption">Optional regex options</param>
      <param name="wholeWordOnly">Replace whole words only</param>
      <param name="caseSensitive">Whether the search is case-sensitive</param>
    </member>
    <member name="M:IronWord.Models.Abstract.TextContentElement.Find(System.String,System.Nullable{System.Text.RegularExpressions.RegexOptions},System.Boolean,System.Boolean)">
      <summary>
            Finds the indices of the specified search text within the text.
            </summary>
      <param name="searchText">The text to search for.</param>
      <param name="regexOption">Optional. The regular expression options.</param>
      <param name="wholeWordOnly">Optional. Indicates whether to match the whole word only.</param>
      <param name="caseSensitive">Optional. Indicates whether the search is case-sensitive.</param>
      <returns>A list of indices where the search text is found.</returns>
      <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="searchText" /> is null.</exception>
    </member>
    <member name="M:IronWord.Models.Abstract.TextContentElement.ToString">
      <summary>
            Provides a textual representation of the TextContentElement.
            </summary>
      <returns>A string representation of the element.</returns>
    </member>
    <member name="T:IronWord.Models.BorderStyle">
      <summary>
            Defines the properties of a border style.
            </summary>
    </member>
    <member name="P:IronWord.Models.BorderStyle.BorderValue">
      <summary>
            Gets or sets the border value.
            </summary>
    </member>
    <member name="P:IronWord.Models.BorderStyle.BorderSize">
      <summary>
            Gets or sets the border size in pixels.
            </summary>
    </member>
    <member name="P:IronWord.Models.BorderStyle.BorderSpace">
      <summary>
            Gets or sets the space between the border and the content in pixels.
            </summary>
    </member>
    <member name="P:IronWord.Models.BorderStyle.BorderColor">
      <summary>
            Gets or sets the color of the border.
            </summary>
    </member>
    <member name="T:IronWord.Models.Borders">
      <summary>
            Defines the borders for a specific element.
            </summary>
    </member>
    <member name="P:IronWord.Models.Borders.LeftBorder">
      <summary>
            Gets or sets the style of the left border.
            </summary>
    </member>
    <member name="P:IronWord.Models.Borders.RightBorder">
      <summary>
            Gets or sets the style of the right border.
            </summary>
    </member>
    <member name="P:IronWord.Models.Borders.TopBorder">
      <summary>
            Gets or sets the style of the top border.
            </summary>
    </member>
    <member name="P:IronWord.Models.Borders.BottomBorder">
      <summary>
            Gets or sets the style of the bottom border.
            </summary>
    </member>
    <member name="T:IronWord.Models.Chart">
      <summary>
            Represents a chart element within the document.
            </summary>
    </member>
    <member name="M:IronWord.Models.Chart.#ctor">
      <summary>
            Initializes a new instance of the Chart class.
            </summary>
    </member>
    <member name="M:IronWord.Models.Chart.#ctor(IronWord.Models.Enums.ChartType,System.String)">
      <summary>
            Initializes a new instance of the Chart class with the specified type and optional title.
            </summary>
      <param name="chartType">The type of the chart (e.g., Bar, Line, Pie).</param>
      <param name="title">The title of the chart (optional).</param>
    </member>
    <member name="P:IronWord.Models.Chart.Title">
      <summary>
            Gets or sets the title of the chart.
            </summary>
    </member>
    <member name="P:IronWord.Models.Chart.Type">
      <summary>
            Gets or sets the type of the chart (e.g., Bar, Line, Pie).
            </summary>
    </member>
    <member name="P:IronWord.Models.Chart.DataSource">
      <summary>
            Gets or sets the data source for the chart.
            </summary>
    </member>
    <member name="P:IronWord.Models.Chart.HasLegend">
      <summary>
            Gets or sets a value indicating whether the chart has a legend.
            </summary>
    </member>
    <member name="P:IronWord.Models.Chart.AxisConfig">
      <summary>
            Gets or sets the chart's axis configuration.
            </summary>
    </member>
    <member name="P:IronWord.Models.Chart.Style">
      <summary>
            Gets or sets the chart's visual style and themes.
            </summary>
    </member>
    <member name="M:IronWord.Models.Chart.UpdateChart">
      <summary>
            Updates the chart based on its data source.
            </summary>
    </member>
    <member name="T:IronWord.Models.ChartDataSource">
      <summary>
            Represents the data source of the chart. This could be a collection, database connection, or other data providers.
            </summary>
    </member>
    <member name="T:IronWord.Models.AxisConfiguration">
      <summary>
            Represents the configuration of the chart's axes, including labels, ranges, and formatting.
            </summary>
    </member>
    <member name="T:IronWord.Models.ChartStyle">
      <summary>
            Represents the visual style of the chart, including themes, colors, and other aesthetics.
            </summary>
    </member>
    <member name="T:IronWord.Models.Common.Constants">
      <summary>
            A static class containing global constants for the application.
            </summary>
    </member>
    <member name="F:IronWord.Models.Common.Constants.DefaultTextColor">
      <summary>
            The default text color used throughout the application.
            </summary>
    </member>
    <member name="T:IronWord.Models.Container">
      <summary>
            Represents a container element within a Word document, which can hold other content elements like paragraphs, tables, and images.
            </summary>
    </member>
    <member name="M:IronWord.Models.Container.#ctor">
      <summary>
            Initializes a new instance of the Container class.
            </summary>
    </member>
    <member name="M:IronWord.Models.Container.#ctor(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Initializes a new instance of the Container class with the specified child elements.
            </summary>
      <param name="children">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.Container.AddChild(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Adds one or more child content elements to the current content element.
            </summary>
      <param name="children">The content elements to be added as children.</param>
    </member>
    <member name="T:IronWord.Models.ContentRange">
      <summary>
            Represents a range of elements within the document content model.
            </summary>
    </member>
    <member name="P:IronWord.Models.ContentRange.IsSinglePoint">
      <summary>
            Gets or sets a value indicating whether the range consists of a single point.
            </summary>
    </member>
    <member name="P:IronWord.Models.ContentRange.StartPosition">
      <summary>
            Gets the starting position of the range within the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.ContentRange.EndPosition">
      <summary>
            Gets the ending position of the range within the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.ContentRange.CoveredElements">
      <summary>
            Gets a read-only array of the content elements covered by the range.
            </summary>
    </member>
    <member name="M:IronWord.Models.ContentRange.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the ContentRange class with the specified start and end positions.
            </summary>
      <param name="startPosition">The starting position of the range.</param>
      <param name="endPosition">The ending position of the range.</param>
      <param name="isSinglePoint">Optional flag indicating whether the range represents a single point.</param>
    </member>
    <member name="M:IronWord.Models.ContentRange.ValidateRange(System.Int32,System.Int32)">
      <summary>
            Validates whether the specified start and end positions represent a valid range.
            </summary>
      <param name="startPosition">The starting position to validate.</param>
      <param name="endPosition">The ending position to validate.</param>
      <returns>True if the range is valid, false otherwise.</returns>
    </member>
    <member name="M:IronWord.Models.ContentRange.SetStartPosition(System.Int32)">
      <summary>
            Sets the starting position of the range.
            </summary>
      <param name="position">The new starting position.</param>
      <returns>A new ContentRange object with the updated starting position.</returns>
    </member>
    <member name="M:IronWord.Models.ContentRange.SetEndPosition(System.Int32)">
      <summary>
            Sets the ending position of the range.
            </summary>
      <param name="position">The new ending position.</param>
      <returns>A new ContentRange object with the updated ending position.</returns>
    </member>
    <member name="M:IronWord.Models.ContentRange.Intersects(IronWord.Models.ContentRange)">
      <summary>
            Checks whether this ContentRange intersects with another ContentRange.
            </summary>
      <param name="other">The other ContentRange to compare with.</param>
      <returns>True if the ranges intersect, false otherwise.</returns>
    </member>
    <member name="M:IronWord.Models.ContentRange.GetCoveredElements">
      <summary>
            Gets an array of ContentElements covered by the range.
            </summary>
      <returns>An array of ContentElements.</returns>
    </member>
    <member name="P:IronWord.Models.ContentRange.Paragraphs">
      <summary>
            Gets an enumerable collection of Paragraph elements covered by the range.
            </summary>
    </member>
    <member name="P:IronWord.Models.ContentRange.Sections">
      <summary>
            Gets an enumerable collection of Section elements covered by the range.
            </summary>
    </member>
    <member name="P:IronWord.Models.ContentRange.Runs">
      <summary>
            Gets an enumerable collection of Run elements covered by the range.
            </summary>
    </member>
    <member name="P:IronWord.Models.ContentRange.Images">
      <summary>
            Gets an enumerable collection of Image elements covered by the range.
            </summary>
    </member>
    <member name="P:IronWord.Models.ContentRange.Charts">
      <summary>
            Gets an enumerable collection of Chart elements covered by the range.
            </summary>
    </member>
    <member name="T:IronWord.Models.DocumentSection">
      <summary>
            Represents a section within a document, containing various content elements like paragraphs, text runs, and tables.
            </summary>
    </member>
    <member name="P:IronWord.Models.DocumentSection.Index">
      <summary>
            Gets the index of this DocumentSection within the parent's list of children.
            </summary>
    </member>
    <member name="P:IronWord.Models.DocumentSection.PageSetup">
      <summary>
            Gets or sets the page setup information for this section, including headers and footers.
            </summary>
    </member>
    <member name="P:IronWord.Models.DocumentSection.Paragraphs">
      <summary>
            Gets a list of all Paragraph elements contained within this document section.
            </summary>
      <returns>A List object containing all Paragraph elements.</returns>
    </member>
    <member name="P:IronWord.Models.DocumentSection.Tables">
      <summary>
            Gets a list of all Table elements contained within  this document section.
            </summary>
      <returns>A List object containing all Table elements.</returns>
    </member>
    <member name="P:IronWord.Models.DocumentSection.Charts">
      <summary>
            Gets a list of all Chart elements contained within this document section.
            </summary>
      <returns>A List object containing all Chart elements.</returns>
    </member>
    <member name="P:IronWord.Models.DocumentSection.Texts">
      <summary>
            Gets a list of all Text elements contained within  this document section.
            </summary>
      <returns>A List object containing all Text elements.</returns>
    </member>
    <member name="P:IronWord.Models.DocumentSection.Images">
      <summary>
            Gets a list of all Image elements contained within  this document section.
            </summary>
      <returns>A List object containing all Image elements.</returns>
    </member>
    <member name="P:IronWord.Models.DocumentSection.Shapes">
      <summary>
            Gets a list of all Table elements contained within  this document section.
            </summary>
      <returns>A List object containing all Table elements.</returns>
    </member>
    <member name="P:IronWord.Models.DocumentSection.MultiLevelTextLists">
      <summary>
            Gets a list of all Shape elements contained within  this document section.
            </summary>
      <returns>A List object containing all Shape elements.</returns>
    </member>
    <member name="M:IronWord.Models.DocumentSection.#ctor(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Initializes a new instance of the DocumentSection class.
            </summary>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddChild(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Adds one or more child content elements to the current content element.
            </summary>
      <param name="children">The content elements to be added as children.</param>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddText(IronWord.Models.Text)">
      <summary>
            Adds a new Text object to the last paragraph of section.
            </summary>
      <param name="text">The Text object to be added.</param>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddText(System.String)">
      <summary>
            Adds a text to the last paragraph of section.
            </summary>
      <param name="text">The text to be added.</param>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddParagraph(IronWord.Models.Paragraph)">
      <summary>
            Adds a new Paragraph object to the section.
            </summary>
      <param name="paragraph">The Paragraph object to be added.</param>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddForm(IronWord.Models.Form)">
      <summary>
            Adds a new Form object to the section.
            </summary>
      <param name="form">The Form object to be added.</param>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddTable(IronWord.Models.Table)">
      <summary>
            Adds a new Table object to the section.
            </summary>
      <param name="table">The Table object to be added.</param>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddShape(IronWord.Models.Shape)">
      <summary>
            Adds a new Shape object to the section.
            </summary>
      <param name="shape">The Shape object to be added.</param>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddMultiLevelTextList(IronWord.Models.MultiLevelTextList)">
      <summary>
            Adds a new multiLevelTextList object to the section.
            </summary>
      <param name="multiLevelTextList">The multiLevelTextList object to be added.</param>
      <returns>A instance of the added MultiLevelTextList.</returns>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddImage(IronWord.Models.Image)">
      <summary>
            Adds a new Image object to the section.
            </summary>
      <param name="image">The Image object to be added.</param>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddImage(System.IO.Stream)">
      <summary>
            Adds an image to the to the section.
            </summary>
      <param name="imageStream">The stream image to be loaded.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddImage(System.String)">
      <summary>
            Adds an image to the to the section.
            </summary>
      <param name="imagePath">The physical path of Image to be loaded.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.Models.DocumentSection.AddImage(IronSoftware.Drawing.AnyBitmap)">
      <summary>
            Adds an image to this TableCell from an <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.
            </summary>
    </member>
    <member name="M:IronWord.Models.DocumentSection.Clone">
      <summary>
            Creates a deep copy of the DocumentSection.
            </summary>
      <returns>A new instance of the DocumentSection with all properties and child elements copied.</returns>
    </member>
    <member name="T:IronWord.Models.Enums.ChartType">
      <summary>
            Represents the different types of charts supported by the document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ChartType.Bar">
      <summary>
            A bar chart.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ChartType.Line">
      <summary>
            A line chart.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ChartType.Pie">
      <summary>
            A pie chart.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.Direction">
      <summary>
            Specifies the text direction in a document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.Direction.LeftToRight">
      <summary>
            Text flows from left to right.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.Direction.RightToLeft">
      <summary>
            Text flows from right to left.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.DocumentSectionType">
      <summary>
            Enumerates the different types of sections that can be included in a document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.DocumentSectionType.Default">
      <summary>
            Represents the main body of the document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.DocumentSectionType.TitlePage">
      <summary>
            Represents the introductory page of a document, typically containing the title, author, and other relevant information.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.DocumentSectionType.Index">
      <summary>
            Represents a list of topics and their corresponding page numbers, usually found at the end of a document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.DocumentSectionType.Appendix">
      <summary>
            Represents supplemental material attached to the end of a document, often containing additional information or references.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.ElementStatus">
      <summary>
            Represents the status of a content element.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ElementStatus.NoChange">
      <summary>
            The element has not been changed since it was created.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ElementStatus.New">
      <summary>
            The element is newly created.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ElementStatus.Updated">
      <summary>
            The element has been updated.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ElementStatus.Deleted">
      <summary>
            The element has been deleted.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.HorizontalAlignment">
      <summary>
            The possible horizontal alignment options for text and other elements.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.HorizontalAlignment.Left">
      <summary>
            The text or element will be aligned to the left side of its container.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.HorizontalAlignment.Center">
      <summary>
            The text or element will be horizontally centered within its container.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.HorizontalAlignment.Right">
      <summary>
            The text or element will be aligned to the right side of its container.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.ImageType">
      <summary>
            Represents the supported image formats for Image elements.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Bmp">
      <summary>
            Windows Bitmap Graphics (.bmp).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Gif">
      <summary>
            Graphic Interchange Format (.gif).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Png">
      <summary>
            Portable (Public) Network Graphic (.png).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Tiff">
      <summary>
            Tagged Image Format File (.tiff).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Icon">
      <summary>
            Windows Icon (.ico).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Pcx">
      <summary>
            PC Paintbrush Bitmap Graphic (.pcx).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Jpeg">
      <summary>
            JPEG/JIFF Image (.jpeg).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Emf">
      <summary>
            Extended (Enhanced) Windows Metafile Format (.emf).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Wmf">
      <summary>
            Windows Metafile (.wmf).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ImageType.Svg">
      <summary>
            Scalable Vector Graphics (.svg).
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.Units">
      <summary>
            Enumeration representing various units of measurement.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.Units.inch">
      <summary>
            Inches as the unit of measurement.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.Units.cm">
      <summary>
            Centimeters as the unit of measurement.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.Units.mm">
      <summary>
            Millimeters as the unit of measurement.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.Units.EMU">
      <summary>
            English Metric Units (EMU) as the unit of measurement.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.Units.Twips">
      <summary>
            twentieths (1/20) of a point units (Twips) as the unit of measurement.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.Units.pt">
      <summary>
            Points (1/72 of an inch) as the unit of measurement.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.NumberFormatValues">
      <summary>
            Defines the NumberFormatValues enumeration.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Decimal">
      <summary>
            Decimal Numbers.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.UpperRoman">
      <summary>
            Uppercase Roman Numerals.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.LowerRoman">
      <summary>
            Lowercase Roman Numerals.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.UpperLetter">
      <summary>
            Uppercase Latin Alphabet.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.LowerLetter">
      <summary>
            Lowercase Latin Alphabet.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Ordinal">
      <summary>
            Ordinal.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.CardinalText">
      <summary>
            Cardinal Text.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.OrdinalText">
      <summary>
            Ordinal Text.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Hex">
      <summary>
            Hexadecimal Numbering.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Chicago">
      <summary>
            Chicago Manual of Style.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.IdeographDigital">
      <summary>
            Ideographs.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.JapaneseCounting">
      <summary>
            Japanese Counting System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Aiueo">
      <summary>
            AIUEO Order Hiragana.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Iroha">
      <summary>
            Iroha Ordered Katakana.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.DecimalFullWidth">
      <summary>
            Double Byte Arabic Numerals.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.DecimalHalfWidth">
      <summary>
            Single Byte Arabic Numerals.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.JapaneseLegal">
      <summary>
            Japanese Legal Numbering.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.JapaneseDigitalTenThousand">
      <summary>
            Japanese Digital Ten Thousand Counting System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.DecimalEnclosedCircle">
      <summary>
            Decimal Numbers Enclosed in a Circle.
            <para> "decimalEnclosedCircle".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.DecimalFullWidth2">
      <summary>
            Double Byte Arabic Numerals Alternate.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.AiueoFullWidth">
      <summary>
            Full-Width AIUEO Order Hiragana.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.IrohaFullWidth">
      <summary>
            Full-Width Iroha Ordered Katakana.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.DecimalZero">
      <summary>
            Initial Zero Arabic Numerals.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Bullet">
      <summary>
            Bullet.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Ganada">
      <summary>
            Korean Ganada Numbering.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Chosung">
      <summary>
            Korean Chosung Numbering.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.DecimalEnclosedFullstop">
      <summary>
            Decimal Numbers Followed by a Period.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.DecimalEnclosedParen">
      <summary>
            Decimal Numbers Enclosed in Parenthesis.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.DecimalEnclosedCircleChinese">
      <summary>
            Decimal Numbers Enclosed in a Circle.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.IdeographEnclosedCircle">
      <summary>
            Ideographs Enclosed in a Circle.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.IdeographTraditional">
      <summary>
            Traditional Ideograph Format.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.IdeographZodiac">
      <summary>
            Zodiac Ideograph Format.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.IdeographZodiacTraditional">
      <summary>
            Traditional Zodiac Ideograph Format.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.TaiwaneseCounting">
      <summary>
            Taiwanese Counting System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.IdeographLegalTraditional">
      <summary>
            Traditional Legal Ideograph Format.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.TaiwaneseCountingThousand">
      <summary>
            Taiwanese Counting Thousand System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.TaiwaneseDigital">
      <summary>
            Taiwanese Digital Counting System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.ChineseCounting">
      <summary>
            Chinese Counting System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.ChineseLegalSimplified">
      <summary>
            Chinese Legal Simplified Format.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.ChineseCountingThousand">
      <summary>
            Chinese Counting Thousand System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.KoreanDigital">
      <summary>
            Korean Digital Counting System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.KoreanCounting">
      <summary>
            Korean Counting System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.KoreanLegal">
      <summary>
            Korean Legal Numbering.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.KoreanDigital2">
      <summary>
            Korean Digital Counting System Alternate.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.VietnameseCounting">
      <summary>
            Vietnamese Numerals.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.RussianLower">
      <summary>
            Lowercase Russian Alphabet.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.RussianUpper">
      <summary>
            Uppercase Russian Alphabet.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.None">
      <summary>
            No Numbering.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.NumberInDash">
      <summary>
            Number With Dashes.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Hebrew1">
      <summary>
            Hebrew Numerals.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Hebrew2">
      <summary>
            Hebrew Alphabet.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.ArabicAlpha">
      <summary>
            Arabic Alphabet.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.ArabicAbjad">
      <summary>
            Arabic Abjad Numerals.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.HindiVowels">
      <summary>
            Hindi Vowels.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.HindiConsonants">
      <summary>
            Hindi Consonants.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.HindiNumbers">
      <summary>
            Hindi Numbers.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.HindiCounting">
      <summary>
            Hindi Counting System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.ThaiLetters">
      <summary>
            Thai Letters.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.ThaiNumbers">
      <summary>
            Thai Numerals.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.ThaiCounting">
      <summary>
            Thai Counting System.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.BahtText">
      <summary>
            bahtText.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.DollarText">
      <summary>
            dollarText.
            <remark>This item is only available in Office 2010 and later.</remark></summary>
    </member>
    <member name="F:IronWord.Models.Enums.NumberFormatValues.Custom">
      <summary>
            custom.
            <remark>This item is only available in Office 2010 and later.</remark></summary>
    </member>
    <member name="T:IronWord.Models.Enums.PageNumberStyle">
      <summary>
            Specifies the style used for displaying page numbers in a document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PageNumberStyle.None">
      <summary>
            No page numbers are displayed.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PageNumberStyle.Arabic">
      <summary>
            Page numbers are displayed using Arabic numerals (e.g., "1", "2", "3").
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PageNumberStyle.Roman">
      <summary>
            Page numbers are displayed using Roman numerals (e.g., "I", "II", "III").
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.PageOrientation">
      <summary>
            Represents the possible orientations of a page in a document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PageOrientation.Portrait">
      <summary>
            The page is taller than it is wide, with the text and content appearing vertically.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PageOrientation.Landscape">
      <summary>
            The page is wider than it is tall, with the text and content appearing horizontally.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.PaperSize">
      <summary>
            Represents the available paper sizes for setting up the document layout.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PaperSize.A4">
      <summary>
            A4 paper size (210mm x 297mm).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PaperSize.A5">
      <summary>
            A5 paper size (148mm x 210mm).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PaperSize.Letter">
      <summary>
            Letter paper size (8.5 inches x 11 inches).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PaperSize.Legal">
      <summary>
            Legal paper size (8.5 inches x 14 inches).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.PaperSize.Custom">
      <summary>
            Custom paper size.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.ProtectionType">
      <summary>
            Enumerates the types of protection that can be applied to a document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ProtectionType.None">
      <summary>
            No protection applied.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ProtectionType.ReadOnly">
      <summary>
            Document is protected from edits, but specific sections or content regions can be exempt.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ProtectionType.CommentsOnly">
      <summary>
            Only comments can be inserted into the document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ProtectionType.TrackChanges">
      <summary>
            Only track changes is enabled.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ProtectionType.FormFilling">
      <summary>
            Only form fields can be filled out.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.ShadingPatternValues">
      <summary>
            Enumeration of shading pattern values.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Clear">
      <summary>
            No pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Solid">
      <summary>
            0 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_5">
      <summary>
            5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_10">
      <summary>
            10 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_20">
      <summary>
            20 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_25">
      <summary>
            25 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_30">
      <summary>
            30 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_35">
      <summary>
            35 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_40">
      <summary>
            40 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_45">
      <summary>
            45 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_50">
      <summary>
            50 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_55">
      <summary>
            55 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_60">
      <summary>
            60 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_65">
      <summary>
            65 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_70">
      <summary>
            70 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_75">
      <summary>
            75 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_80">
      <summary>
            80 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_85">
      <summary>
            85 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_90">
      <summary>
            90 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_95">
      <summary>
            95 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_100">
      <summary>
            100 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.HorzStripe">
      <summary>
            Horizontal stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.VertStripe">
      <summary>
            Vertical stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ReverseDiagStripe">
      <summary>
            Reverse diagonal stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.DiagStripe">
      <summary>
            Diagonal stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.DiagCross">
      <summary>
            Diagonal crosshatch shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThickDiagCross">
      <summary>
            Thick diagonal crosshatch shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinHorzStripe">
      <summary>
            Thin horizontal stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinVertStripe">
      <summary>
            Thin vertical stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinReverseDiagStripe">
      <summary>
            Thin reverse diagonal stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinDiagStripe">
      <summary>
            Thin diagonal stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinHorzCross">
      <summary>
            Thin horizontal crosshatch shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinDiagCross">
      <summary>
            Thin diagonal crosshatch shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinDiagCrosshatch">
      <summary>
            Thin diag crosshatch shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_2_5">
      <summary>
            2.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_7_5">
      <summary>
            7.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_15">
      <summary>
            15 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_17_5">
      <summary>
            17.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_22_5">
      <summary>
            22.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_27_5">
      <summary>
            27.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_32_5">
      <summary>
            32.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_37_5">
      <summary>
            37.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_42_5">
      <summary>
            42.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_47_5">
      <summary>
            47.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_52_5">
      <summary>
            52.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_57_5">
      <summary>
            57.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_62_5">
      <summary>
            62.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_67_5">
      <summary>
            67.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_72_5">
      <summary>
            72.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_77_5">
      <summary>
            77.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_82_5">
      <summary>
            82.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.Percent_87_5">
      <summary>
            87.5 percent shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinDiagStripe_1">
      <summary>
            Thin diagonal stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinDiagCross_1">
      <summary>
            Thin diagonal crosshatch shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinDiagCrosshatch_1">
      <summary>
            Thin diag crosshatch shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinHorzStripe_1">
      <summary>
            Thin horizontal stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinVertStripe_1">
      <summary>
            Thin vertical stripe shading pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShadingPatternValues.ThinReverseDiagStripe_1">
      <summary>
            Thin reverse diagonal stripe shading pattern.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.ShapeType">
      <summary>
            Represents the various type of Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Line">
      <summary>
            Line Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LineInverse">
      <summary>
            Line Inverse Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Triangle">
      <summary>
            Triangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.RightTriangle">
      <summary>
            Right Triangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Rectangle">
      <summary>
            Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Diamond">
      <summary>
            Diamond Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Parallelogram">
      <summary>
            Parallelogram Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Trapezoid">
      <summary>
            Trapezoid Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.NonIsoscelesTrapezoid">
      <summary>
            Non-Isosceles Trapezoid Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Pentagon">
      <summary>
            Pentagon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Hexagon">
      <summary>
            Hexagon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Heptagon">
      <summary>
            Heptagon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Octagon">
      <summary>
            Octagon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Decagon">
      <summary>
            Decagon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Dodecagon">
      <summary>
            Dodecagon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star4">
      <summary>
            Four Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star5">
      <summary>
            Five Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star6">
      <summary>
            Six Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star7">
      <summary>
            Seven Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star8">
      <summary>
            Eight Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star10">
      <summary>
            Ten Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star12">
      <summary>
            Twelve Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star16">
      <summary>
            Sixteen Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star24">
      <summary>
            Twenty Four Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Star32">
      <summary>
            Thirty Two Pointed Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.RoundRectangle">
      <summary>
            Round Corner Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Round1Rectangle">
      <summary>
            One Round Corner Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Round2SameRectangle">
      <summary>
            Two Same-side Round Corner Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Round2DiagonalRectangle">
      <summary>
            Two Diagonal Round Corner Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.SnipRoundRectangle">
      <summary>
            One Snip One Round Corner Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Snip1Rectangle">
      <summary>
            One Snip Corner Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Snip2SameRectangle">
      <summary>
            Two Same-side Snip Corner Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Snip2DiagonalRectangle">
      <summary>
            Two Diagonal Snip Corner Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Plaque">
      <summary>
            Plaque Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Ellipse">
      <summary>
            Ellipse Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Teardrop">
      <summary>
            Teardrop Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.HomePlate">
      <summary>
            Home Plate Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Chevron">
      <summary>
            Chevron Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.PieWedge">
      <summary>
            Pie Wedge Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Pie">
      <summary>
            Pie Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BlockArc">
      <summary>
            Block Arc Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Donut">
      <summary>
            Donut Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.NoSmoking">
      <summary>
            No Smoking Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.RightArrow">
      <summary>
            Right Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftArrow">
      <summary>
            Left Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.UpArrow">
      <summary>
            Up Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.DownArrow">
      <summary>
            Down Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.StripedRightArrow">
      <summary>
            Striped Right Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.NotchedRightArrow">
      <summary>
            Notched Right Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BentUpArrow">
      <summary>
            Bent Up Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftRightArrow">
      <summary>
            Left Right Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.UpDownArrow">
      <summary>
            Up Down Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftUpArrow">
      <summary>
            Left Up Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftRightUpArrow">
      <summary>
            Left Right Up Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.QuadArrow">
      <summary>
            Quad-Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftArrowCallout">
      <summary>
            Callout Left Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.RightArrowCallout">
      <summary>
            Callout Right Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.UpArrowCallout">
      <summary>
            Callout Up Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.DownArrowCallout">
      <summary>
            Callout Down Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftRightArrowCallout">
      <summary>
            Callout Left Right Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.UpDownArrowCallout">
      <summary>
            Callout Up Down Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.QuadArrowCallout">
      <summary>
            Callout Quad-Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BentArrow">
      <summary>
            Bent Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.UTurnArrow">
      <summary>
            U-Turn Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CircularArrow">
      <summary>
            Circular Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftCircularArrow">
      <summary>
            Left Circular Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftRightCircularArrow">
      <summary>
            Left Right Circular Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CurvedRightArrow">
      <summary>
            Curved Right Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CurvedLeftArrow">
      <summary>
            Curved Left Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CurvedUpArrow">
      <summary>
            Curved Up Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CurvedDownArrow">
      <summary>
            Curved Down Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.SwooshArrow">
      <summary>
            Swoosh Arrow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Cube">
      <summary>
            Cube Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Can">
      <summary>
            Can Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LightningBolt">
      <summary>
            Lightning Bolt Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Heart">
      <summary>
            Heart Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Sun">
      <summary>
            Sun Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Moon">
      <summary>
            Moon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.SmileyFace">
      <summary>
            Smiley Face Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.IrregularSeal1">
      <summary>
            Irregular Seal 1 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.IrregularSeal2">
      <summary>
            Irregular Seal 2 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FoldedCorner">
      <summary>
            Folded Corner Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Bevel">
      <summary>
            Bevel Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Frame">
      <summary>
            Frame Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.HalfFrame">
      <summary>
            Half Frame Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Corner">
      <summary>
            Corner Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.DiagonalStripe">
      <summary>
            Diagonal Stripe Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Chord">
      <summary>
            Chord Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Arc">
      <summary>
            Curved Arc Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftBracket">
      <summary>
            Left Bracket Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.RightBracket">
      <summary>
            Right Bracket Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftBrace">
      <summary>
            Left Brace Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.RightBrace">
      <summary>
            Right Brace Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BracketPair">
      <summary>
            Bracket Pair Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BracePair">
      <summary>
            Brace Pair Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.StraightConnector1">
      <summary>
            Straight Connector 1 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BentConnector2">
      <summary>
            Bent Connector 2 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BentConnector3">
      <summary>
            Bent Connector 3 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BentConnector4">
      <summary>
            Bent Connector 4 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BentConnector5">
      <summary>
            Bent Connector 5 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CurvedConnector2">
      <summary>
            Curved Connector 2 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CurvedConnector3">
      <summary>
            Curved Connector 3 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CurvedConnector4">
      <summary>
            Curved Connector 4 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CurvedConnector5">
      <summary>
            Curved Connector 5 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Callout1">
      <summary>
            Callout 1 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Callout2">
      <summary>
            Callout 2 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Callout3">
      <summary>
            Callout 3 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.AccentCallout1">
      <summary>
            Callout 1 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.AccentCallout2">
      <summary>
            Callout 2 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.AccentCallout3">
      <summary>
            Callout 3 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BorderCallout1">
      <summary>
            Callout 1 with Border Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BorderCallout2">
      <summary>
            Callout 2 with Border Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.BorderCallout3">
      <summary>
            Callout 3 with Border Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.AccentBorderCallout1">
      <summary>
            Callout 1 with Border and Accent Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.AccentBorderCallout2">
      <summary>
            Callout 2 with Border and Accent Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.AccentBorderCallout3">
      <summary>
            Callout 3 with Border and Accent Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.WedgeRectangleCallout">
      <summary>
            Callout Wedge Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.WedgeRoundRectangleCallout">
      <summary>
            Callout Wedge Round Rectangle Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.WedgeEllipseCallout">
      <summary>
            Callout Wedge Ellipse Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CloudCallout">
      <summary>
            Callout Cloud Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Cloud">
      <summary>
            Cloud Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Ribbon">
      <summary>
            Ribbon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Ribbon2">
      <summary>
            Ribbon 2 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.EllipseRibbon">
      <summary>
            Ellipse Ribbon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.EllipseRibbon2">
      <summary>
            Ellipse Ribbon 2 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.LeftRightRibbon">
      <summary>
            Left Right Ribbon Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.VerticalScroll">
      <summary>
            Vertical Scroll Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.HorizontalScroll">
      <summary>
            Horizontal Scroll Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Wave">
      <summary>
            Wave Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.DoubleWave">
      <summary>
            Double Wave Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Plus">
      <summary>
            Plus Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartProcess">
      <summary>
            Process Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartDecision">
      <summary>
            Decision Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartInputOutput">
      <summary>
            Input Output Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartPredefinedProcess">
      <summary>
            Predefined Process Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartInternalStorage">
      <summary>
            Internal Storage Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartDocument">
      <summary>
            Document Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartMultidocument">
      <summary>
            Multi-Document Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartTerminator">
      <summary>
            Terminator Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartPreparation">
      <summary>
            Preparation Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartManualInput">
      <summary>
            Manual Input Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartManualOperation">
      <summary>
            Manual Operation Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartConnector">
      <summary>
            Connector Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartPunchedCard">
      <summary>
            Punched Card Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartPunchedTape">
      <summary>
            Punched Tape Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartSummingJunction">
      <summary>
            Summing Junction Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartOr">
      <summary>
            Or Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartCollate">
      <summary>
            Collate Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartSort">
      <summary>
            Sort Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartExtract">
      <summary>
            Extract Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartMerge">
      <summary>
            Merge Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartOfflineStorage">
      <summary>
            Offline Storage Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartOnlineStorage">
      <summary>
            Online Storage Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartMagneticTape">
      <summary>
            Magnetic Tape Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartMagneticDisk">
      <summary>
            Magnetic Disk Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartMagneticDrum">
      <summary>
            Magnetic Drum Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartDisplay">
      <summary>
            Display Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartDelay">
      <summary>
            Delay Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartAlternateProcess">
      <summary>
            Alternate Process Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.FlowChartOffpageConnector">
      <summary>
            Off-Page Connector Flow Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonBlank">
      <summary>
            Blank Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonHome">
      <summary>
            Home Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonHelp">
      <summary>
            Help Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonInformation">
      <summary>
            Information Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonForwardNext">
      <summary>
            Forward or Next Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonBackPrevious">
      <summary>
            Back or Previous Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonEnd">
      <summary>
            End Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonBeginning">
      <summary>
            Beginning Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonReturn">
      <summary>
            Return Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonDocument">
      <summary>
            Document Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonSound">
      <summary>
            Sound Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ActionButtonMovie">
      <summary>
            Movie Button Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Gear6">
      <summary>
            Gear 6 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Gear9">
      <summary>
            Gear 9 Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.Funnel">
      <summary>
            Funnel Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.MathPlus">
      <summary>
            Plus Math Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.MathMinus">
      <summary>
            Minus Math Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.MathMultiply">
      <summary>
            Multiply Math Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.MathDivide">
      <summary>
            Divide Math Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.MathEqual">
      <summary>
            Equal Math Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.MathNotEqual">
      <summary>
            Not Equal Math Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.CornerTabs">
      <summary>
            Corner Tabs Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.SquareTabs">
      <summary>
            Square Tabs Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.PlaqueTabs">
      <summary>
            Plaque Tabs Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ChartX">
      <summary>
            Chart X Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ChartStar">
      <summary>
            Chart Star Shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ShapeType.ChartPlus">
      <summary>
            Chart Plus Shape.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.BorderValues">
      <summary>
            Represents the various options for a border style.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.Nil">
      <summary>
            No border specified.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.None">
      <summary>
            No actual border drawn, but space is reserved for a border.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.Single">
      <summary>
            A single, solid line border.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.Thick">
      <summary>
            A thicker, solid line border.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.Double">
      <summary>
            A double line border with a small gap between the lines.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.Dotted">
      <summary>
            A line border with small dots along its length.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.Dashed">
      <summary>
            A line border with dashes along its length.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.DotDash">
      <summary>
            A line border with a dot, dash, and dot pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.DotDotDash">
      <summary>
            A line border with a dot, dot, dash pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.Triple">
      <summary>
            A triple line border with two small gaps between the lines.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThinThickSmallGap">
      <summary>
            A line border with alternating thin and thick sections, with a small gap between each section.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThickThinSmallGap">
      <summary>
            A line border with alternating thick and thin sections, with a small gap between each section.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThinThickThinSmallGap">
      <summary>
            A line border with alternating thin, thick, and thin sections, with a small gap between each section.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThinThickMediumGap">
      <summary>
            A line border with alternating thin and thick sections, with a medium gap between each section.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThickThinMediumGap">
      <summary>
            A line border with alternating thick and thin sections, with a medium gap between each section.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThinThickThinMediumGap">
      <summary>
            A line border with alternating thin, thick, and thin sections, with a medium gap between each section.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThinThickLargeGap">
      <summary>
            A line border with alternating thin and thick sections, with a large gap between each section.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThickThinLargeGap">
      <summary>
            A line border with alternating thick and thin sections, with a large gap between each section.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThinThickThinLargeGap">
      <summary>
            A line border with alternating thin, thick, and thin sections, with a large gap between each section.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.Wave">
      <summary>
            A line border with a wavy pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.DoubleWave">
      <summary>
            A double line border with a wavy pattern.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.DashSmallGap">
      <summary>
            A line border with dashes and small gaps between them.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.DashDotStroked">
      <summary>
            A line border with a dashed line with dots over it.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThreeDEmboss">
      <summary>
            A 3D embossed border.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.BorderValues.ThreeDEngrave">
      <summary>
            A 3D engraved border.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.JustificationValues">
      <summary>
            Represents the justification options for text within a table cell.
            Justification affects the horizontal spacing of the text within the cell.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.Left">
      <summary>
            Aligns the text to the left of the cell.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.Start">
      <summary>
            Aligns the text to the start of the cell (Left for Left-to-Right, Right for Right-to-Left).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.Center">
      <summary>
            Aligns the text to the center of the cell.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.Right">
      <summary>
            Aligns the text to the right of the cell.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.End">
      <summary>
            Aligns the text to the end of the cell (Right for Left-to-Right, Left for Right-to-Left).
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.Both">
      <summary>
            Justifies the text on both sides of the cell, expanding the spacing between words as needed.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.MediumKashida">
      <summary>
            Justifies the text with medium Kashida spacing, a specific form of letter spacing used in Arabic and other languages with similar writing systems.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.Distribute">
      <summary>
            Distributes the text evenly across the cell, with equal spacing between all characters.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.NumTab">
      <summary>
            Justifies the text with a specific number of tabs inserted between words, as defined by the NumTab property.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.HighKashida">
      <summary>
            Justifies the text with high Kashida spacing, another form of letter spacing used in Arabic and other languages with similar writing systems.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.LowKashida">
      <summary>
            Justifies the text with low Kashida spacing, another form of letter spacing used in Arabic and other languages with similar writing systems.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.JustificationValues.ThaiDistribute">
      <summary>
            Justifies the text with Thai Distribute spacing, a specific form of letter spacing used in the Thai language.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.VerticalAlign">
      <summary>
            Represents the vertical alignment of text within a table cell.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.VerticalAlign.Top">
      <summary>
            Aligns the text to the top of the cell.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.VerticalAlign.Middle">
      <summary>
            Aligns the text to the middle of the cell vertically.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.VerticalAlign.Bottom">
      <summary>
            Aligns the text to the bottom of the cell.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.TableStyle">
      <summary>
            Represents the style of a table in a Word document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.TableNormal">
      <summary>
            Default table style.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.TableGrid">
      <summary>
            Table style with gridlines.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.LightShading">
      <summary>
            Table with light shading.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.LightList">
      <summary>
            Table with light list style.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.MediumShading1">
      <summary>
            Table with medium shading style 1.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.MediumShading2">
      <summary>
            Table with medium shading style 2.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.MediumList1">
      <summary>
            Table with medium list style 1.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.MediumList2">
      <summary>
            Table with medium list style 2.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.DarkShading">
      <summary>
            Table with dark shading.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TableStyle.DarkList">
      <summary>
            Table with dark list style.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.TextAlignment">
      <summary>
            Specifies the text alignment for the text.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextAlignment.Left">
      <summary>
            The text is aligned to the left margin.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextAlignment.Center">
      <summary>
            The text is centered horizontally within its container.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextAlignment.Right">
      <summary>
            The text is aligned to the right margin.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextAlignment.Justified">
      <summary>
            The text is justified, meaning the spaces between words are adjusted to create clean, even margins on both the left and right sides of the text.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.TextWrap">
      <summary>
            Specifies how text should wrap around a shape in the document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextWrap.None">
      <summary>
            Text does not wrap around the shape and flows without interruption.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextWrap.Square">
      <summary>
            Text wraps around the shape in a square fashion, maintaining a constant margin around the shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextWrap.Tight">
      <summary>
            Text wraps tightly around the shape, conforming to its contours and minimizing the surrounding space.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.TextWrapStyle">
      <summary>
            Specifies how text should wrap around an image in the document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextWrapStyle.Inline">
      <summary>
            Text and image appear inline, with text flowing beside the image.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextWrapStyle.Square">
      <summary>
            Text wraps around the image in a square fashion, maintaining a constant margin around the image.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextWrapStyle.Tight">
      <summary>
            Text wraps tightly around the image, conforming to its contours and minimizing the surrounding space.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextWrapStyle.Behind">
      <summary>
            Text appears behind the image and is obscured by it.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.TextWrapStyle.InFront">
      <summary>
            Text appears in front of the image and may overlap it.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.ThemeColorValues">
      <summary>
            Defines the ThemeColorValues enumeration.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Dark1">
      <summary>
            Dark 1 Theme Color.
            <para>When the item is serialized out as xml, its value is "dark1".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Light1">
      <summary>
            Light 1 Theme Color.
            <para>When the item is serialized out as xml, its value is "light1".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Dark2">
      <summary>
            Dark 2 Theme Color.
            <para>When the item is serialized out as xml, its value is "dark2".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Light2">
      <summary>
            Light 2 Theme Color.
            <para>When the item is serialized out as xml, its value is "light2".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Accent1">
      <summary>
            Accent 1 Theme Color.
            <para>When the item is serialized out as xml, its value is "accent1".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Accent2">
      <summary>
            Accent 2 Theme Color.
            <para>When the item is serialized out as xml, its value is "accent2".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Accent3">
      <summary>
            Accent 3 Theme Color.
            <para>When the item is serialized out as xml, its value is "accent3".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Accent4">
      <summary>
            Accent 4 Theme Color.
            <para>When the item is serialized out as xml, its value is "accent4".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Accent5">
      <summary>
            Accent 5 Theme Color.
            <para>When the item is serialized out as xml, its value is "accent5".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Accent6">
      <summary>
            Accent 6 Theme Color.
            <para>When the item is serialized out as xml, its value is "accent6".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Hyperlink">
      <summary>
            Hyperlink Theme Color.
            <para>When the item is serialized out as xml, its value is "hyperlink".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.FollowedHyperlink">
      <summary>
            Followed Hyperlink Theme Color.
            <para>When the item is serialized out as xml, its value is "followedHyperlink".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.None">
      <summary>
            No Theme Color.
            <para>When the item is serialized out as xml, its value is "none".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Background1">
      <summary>
            Background 1 Theme Color.
            <para>When the item is serialized out as xml, its value is "background1".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Text1">
      <summary>
            Text 1 Theme Color.
            <para>When the item is serialized out as xml, its value is "text1".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Background2">
      <summary>
            Background 2 Theme Color.
            <para>When the item is serialized out as xml, its value is "background2".</para></summary>
    </member>
    <member name="F:IronWord.Models.Enums.ThemeColorValues.Text2">
      <summary>
            Text 2 Theme Color.
            <para>When the item is serialized out as xml, its value is "text2".</para></summary>
    </member>
    <member name="T:IronWord.Models.Enums.VerticalAlignment">
      <summary>
            The possible vertical alignment options for text and other elements.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.VerticalAlignment.Top">
      <summary>
            The text or element will be aligned to the top of its container.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.VerticalAlignment.Middle">
      <summary>
            The text or element will be vertically centered within its container.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.VerticalAlignment.Bottom">
      <summary>
            The text or element will be aligned to the bottom of its container.
            </summary>
    </member>
    <member name="T:IronWord.Models.Enums.WrapText">
      <summary>
            Specifies the manner in which an image wraps around text in the document.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.WrapText.None">
      <summary>
            No wrapping occurs. The image sits alongside the text without interfering with its flow.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.WrapText.InLineWithText">
      <summary>
            The image is placed inline with the text, flowing alongside it on the same line.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.WrapText.Square">
      <summary>
            The image is placed within a square frame and positioned alongside the text.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.WrapText.Tight">
      <summary>
            The image is wrapped tightly around the text, conforming to its shape.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.WrapText.Through">
      <summary>
            The text flows through the image, allowing gaps for the image content.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.WrapText.TopAndBottom">
      <summary>
            The image is placed above and below the text, separated by spacing.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.WrapText.BehindText">
      <summary>
            The image is positioned behind the text, appearing only through gaps in the text.
            </summary>
    </member>
    <member name="F:IronWord.Models.Enums.WrapText.InFrontOfText">
      <summary>
            The image is positioned in front of the text, obscuring any text underneath.
            </summary>
    </member>
    <member name="T:IronWord.Models.Exceptions.ImageLoadException">
      <summary>
            Represents an exception that is thrown when an error occurs during the loading of an image.
            </summary>
      <remarks>
            This exception is typically used to encapsulate and provide more context to exceptions
            that may occur while loading image files.
            </remarks>
    </member>
    <member name="M:IronWord.Models.Exceptions.ImageLoadException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:IronWord.Models.Exceptions.ImageLoadException" /> class with a specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:IronWord.Models.Extensions.ColorHelper">
      <summary>
            A static helper class for color manipulation.
            </summary>
    </member>
    <member name="M:IronWord.Models.Extensions.ColorHelper.ToHex(IronSoftware.Drawing.Color)">
      <summary>
            Converts a Color object to its hexadecimal representation.
            </summary>
      <param name="c">The Color object to convert.</param>
      <returns>The hexadecimal representation of the color, including alpha channel.</returns>
      <remarks>
            This method considers the opacity of the color and adjusts the RGB values accordingly. This is essential for ensuring the correct hex code is generated for semi-transparent colors.
            </remarks>
    </member>
    <member name="T:IronWord.Models.Extensions.StreamHelper">
      <summary>
            Helper class for working with streams and detecting image types.
            </summary>
    </member>
    <member name="M:IronWord.Models.Extensions.StreamHelper.ToBase64(System.IO.Stream)">
      <summary>
            Converts the content of the stream to a base64-encoded string.
            </summary>
      <param name="stream">The input stream to convert.</param>
      <returns>A base64-encoded string representing the stream content.</returns>
    </member>
    <member name="M:IronWord.Models.Extensions.StreamHelper.ToBase64(System.IO.FileStream)">
      <summary>
            Converts the content of the file stream to a base64-encoded string.
            </summary>
      <param name="stream">The input file stream to convert.</param>
      <returns>A base64-encoded string representing the file stream content.</returns>
    </member>
    <member name="M:IronWord.Models.Extensions.StreamHelper.GetImageType(System.IO.Stream)">
      <summary>
            Determines the image type based on the content of the stream.
            </summary>
      <param name="stream">The input stream to analyze.</param>
      <returns>The detected image type.</returns>
    </member>
    <member name="M:IronWord.Models.Extensions.StreamHelper.GetImageType(System.IO.MemoryStream)">
      <summary>
            Determines the image type based on the content of the stream.
            </summary>
      <param name="stream">The input stream to analyze.</param>
      <returns>The detected image type.</returns>
    </member>
    <member name="M:IronWord.Models.Extensions.StreamHelper.GetImageType(System.IO.FileStream)">
      <summary>
            Determines the image type based on the content of the file stream.
            </summary>
      <param name="stream">The input file stream to analyze.</param>
      <returns>The detected image type.</returns>
    </member>
    <member name="T:IronWord.Models.Form">
      <summary>
            Represents a form element within a document section, allowing users to interact with the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Form.Elements">
      <summary>
            Gets or sets the list of Form elements contained within this form.
            </summary>
    </member>
    <member name="M:IronWord.Models.Form.#ctor">
      <summary>
            Initializes a new instance of the Form class.
            </summary>
    </member>
    <member name="T:IronWord.Models.TextInput">
      <summary>
            Represents a text input field within a form, allowing users to enter text data.
            </summary>
    </member>
    <member name="T:IronWord.Models.RadioButton">
      <summary>
            Represents a radio button within a form, allowing users to select one option from a set of options.
            </summary>
    </member>
    <member name="T:IronWord.Models.Image">
      <summary>
            Represents an image element within the document.
            </summary>
    </member>
    <member name="M:IronWord.Models.Image.#ctor">
      <summary>
            Initializes a new instance of the Image class.
            </summary>
    </member>
    <member name="M:IronWord.Models.Image.#ctor(System.String)">
      <summary>
            Initializes a new instance of the Image class with the specified image path.
            </summary>
      <param name="imagePath">The path to the image file.</param>
    </member>
    <member name="M:IronWord.Models.Image.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the Image class with the specified image data stream.
            </summary>
      <param name="imageStream">The stream containing the image data.</param>
    </member>
    <member name="M:IronWord.Models.Image.#ctor(IronSoftware.Drawing.AnyBitmap)">
      <summary>
            Initializes a new instance of the Image class using an <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.
            </summary>
      <param name="anyBitmap">An <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object representing the image data.</param>
    </member>
    <member name="P:IronWord.Models.Image.Index">
      <summary>
            Gets the index of this image within the parent's list of children.
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.Position">
      <summary>
            Gets or sets the position of the image within the document measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.Width">
      <summary>
            Gets or sets the width of the image in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.Height">
      <summary>
            Gets or sets the height of the image in pixels measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.ImageData">
      <summary>
            Gets or sets the Base64-encoded image data.
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.Name">
      <summary>
            Gets or sets the name of the image file, if applicable.
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.Id">
      <summary>
            Gets or sets a unique identifier for the image.
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.Type">
      <summary>
            Gets or sets the image format.
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.WrapText">
      <summary>
            Gets or sets the text wrapping behavior around the image.
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.DistanceFromTop">
      <summary>
            Gets or sets the distance from the top edge of the document to the image measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.DistanceFromBottom">
      <summary>
            Gets or sets the distance from the bottom edge of the document to the image measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.DistanceFromLeft">
      <summary>
            Gets or sets the distance from the left edge of the document to the image measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Image.DistanceFromRight">
      <summary>
            Gets or sets the distance from the right edge of the document to the image measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="M:IronWord.Models.Image.GetWidth(IronWord.Models.Enums.Units)">
      <summary>
            Get Image width in English Metric Units
            </summary>
      <returns> Image width in English Metric Units</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.SetWidth(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.GetHeight(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.SetHeight(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.GetDistanceFromTop(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.SetDistanceFromTop(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.GetDistanceFromBottom(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.SetDistanceFromBottom(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.GetDistanceFromLeft(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.SetDistanceFromLeft(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.GetDistanceFromRight(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Image.SetDistanceFromRight(System.Double,IronWord.Models.Enums.Units)" -->
    <member name="M:IronWord.Models.Image.LoadFromFile(System.String)">
      <summary>
            Loads an image from the specified file path.
            </summary>
      <param name="imagePath">The file path of the image to be loaded.</param>
      <remarks>
            This method attempts to load an image from the specified file path.
            If the file is not found, a <see cref="T:System.IO.FileNotFoundException" /> is thrown.
            Any other exceptions during the loading process are wrapped in an <see cref="T:IronWord.Models.Exceptions.ImageLoadException" />.
            </remarks>
      <exception cref="T:System.IO.FileNotFoundException">Thrown if the specified image file is not found.</exception>
      <exception cref="T:IronWord.Models.Exceptions.ImageLoadException">Thrown if there is an error loading the image.</exception>
    </member>
    <member name="M:IronWord.Models.Image.LoadFromStream(System.IO.Stream)">
      <summary>
            Loads an image from the stream.
            </summary>
      <param name="stream">The stream to be loaded.</param>
      <remarks>
            This method attempts to load an image from the specified file path.
            If the file is not found, a <see cref="T:System.IO.FileNotFoundException" /> is thrown.
            Any other exceptions during the loading process are wrapped in an <see cref="T:IronWord.Models.Exceptions.ImageLoadException" />.
            </remarks>
      <exception cref="T:IronWord.Models.Exceptions.ImageLoadException">Thrown if there is an error loading the image.</exception>
    </member>
    <member name="M:IronWord.Models.Image.Clone">
      <summary>
            Creates a deep copy of the Image.
            </summary>
      <returns>A new instance of the Image with all properties copied.</returns>
    </member>
    <member name="T:IronWord.Models.IronColor">
      <summary>
            Represents a custom color class.
            </summary>
    </member>
    <member name="P:IronWord.Models.IronColor.ColorValue">
      <summary>
            Gets or sets the hexadecimal representation of the color.
            </summary>
    </member>
    <member name="M:IronWord.Models.IronColor.#ctor">
      <summary>
            Initializes a new instance of the IronColor class with a default transparent color.
            </summary>
    </member>
    <member name="M:IronWord.Models.IronColor.#ctor(IronSoftware.Drawing.Color)">
      <summary>
            Initializes a new instance of the IronColor class with the specified color.
            <para>Works nicely with popular Image Color such as <see cref="T:System.Drawing.Color" />, <see cref="!:SkiaSharp.SKColor" />, <see cref="T:SixLabors.ImageSharp.Color" />, <see cref="!:Microsoft.Maui.Graphics.Color" />.</para></summary>
      <param name="color">The color instance to be used.</param>
    </member>
    <member name="M:IronWord.Models.IronColor.#ctor(System.String)">
      <summary>
            Initializes a new instance of the IronColor class with the color specified as a hexadecimal string.
            </summary>
      <param name="color">The hexadecimal representation of the color.</param>
    </member>
    <member name="M:IronWord.Models.IronColor.GetColor">
      <summary>
            Gets the color instance represented by this IronColor.
            </summary>
      <returns>The color instance.</returns>
    </member>
    <member name="T:IronWord.Models.ListItem">
      <summary>
            Represents an Item of Multi Level List class within the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.ListItem.Index">
      <summary>
            Gets the index of this MultiLevelTextList within the parent's list of children.
            </summary>
    </member>
    <member name="M:IronWord.Models.ListItem.#ctor(IronWord.Models.Paragraph)">
      <summary>
            Initializes a new instance of the ListItem class with the specified child elements.
            </summary>
      <param name="paragraph">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.ListItem.#ctor(IronWord.Models.MultiLevelTextList)">
      <summary>
            Initializes a new instance of the ListItem class with the specified child elements.
            </summary>
      <param name="subMultiLevelTextList">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.ListItem.Update(IronWord.Models.Paragraph)">
      <summary>
            Update the Item content
            </summary>
      <param name="paragraph">The paragraph using to update current item content</param>
    </member>
    <member name="M:IronWord.Models.ListItem.AddSubMultiLevelTextList(IronWord.Models.MultiLevelTextList)">
      <summary>
            Add the SubMultiLevelTextList to the ListItem class.
            </summary>
      <param name="subMultiLevelTextList">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.ListItem.RemoveSubMultiLevelTextList">
      <summary>
            Removes the SubMultiLevelTextList from this item if item included SubMultiLevelTextList.
            </summary>
    </member>
    <member name="M:IronWord.Models.ListItem.Clone">
      <summary>
            Creates a deep copy of the ListItem.
            </summary>
      <returns>A new instance of the ListItem with all properties and child elements copied.</returns>
    </member>
    <member name="T:IronWord.Models.List.ListLevel">
      <summary>
            Represents a list level in a document.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.StartNumberingValue">
      <summary>
            Gets or sets the start numbering value for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.NumberingFormat">
      <summary>
            Gets or sets the numbering format for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.LevelRestart">
      <summary>
            Gets or sets the level restart setting for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.ParagraphStyleIdInLevel">
      <summary>
            Gets or sets the paragraph style ID in the level for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.IsLegalNumberingStyle">
      <summary>
            Gets or sets the legal numbering style setting for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.LevelSuffix">
      <summary>
            Gets or sets the level suffix for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.LevelText">
      <summary>
            Gets or sets the level text for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.LevelPictureBulletId">
      <summary>
            Gets or sets the level picture bullet ID for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.LegacyNumbering">
      <summary>
            Gets or sets the legacy numbering setting for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.LevelJustification">
      <summary>
            Gets or sets the level justification for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.PreviousParagraphProperties">
      <summary>
            Gets or sets the previous paragraph properties for the list level.
            </summary>
    </member>
    <member name="P:IronWord.Models.List.ListLevel.NumberingSymbolRunProperties">
      <summary>
            Gets or sets the numbering symbol run properties for the list level.
            </summary>
    </member>
    <member name="T:IronWord.Models.MergeCell">
      <summary>
            Represents a range of cells that are merged into a single cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.MergeCell.StartRow">
      <summary>
            Gets or sets the starting row index of the merged cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.MergeCell.StartColumn">
      <summary>
            Gets or sets the starting column index of the merged cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.MergeCell.EndRow">
      <summary>
            Gets or sets the ending row index of the merged cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.MergeCell.EndColumn">
      <summary>
            Gets or sets the ending column index of the merged cell.
            </summary>
    </member>
    <member name="T:IronWord.Models.Metadata">
      <summary>
            Represents metadata associated with a Document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Metadata.Title">
      <summary>
            Gets or sets the title of the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Metadata.Author">
      <summary>
            Gets or sets the author of the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Metadata.CreatedDate">
      <summary>
            Gets or sets the date the document was created.
            </summary>
    </member>
    <member name="P:IronWord.Models.Metadata.LastModifiedDate">
      <summary>
            Gets or sets the date the document was last modified.
            </summary>
    </member>
    <member name="P:IronWord.Models.Metadata.Keywords">
      <summary>
            Gets or sets additional keywords for the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Metadata.Subject">
      <summary>
            Gets or sets the subject of the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Metadata.Description">
      <summary>
            Gets or sets a summary description of the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Metadata.CustomMetadata">
      <summary>
            Any other custom metadata can be stored here as key-value pairs.
            </summary>
    </member>
    <member name="M:IronWord.Models.Metadata.Validate">
      <summary>
            Method to validate if the metadata follows certain rules.
            </summary>
      <returns>True if validation passes, else false.</returns>
    </member>
    <member name="M:IronWord.Models.Metadata.ToJson">
      <summary>
            Serialize the Metadata to a JSON string.
            </summary>
      <returns>Serialized JSON string.</returns>
    </member>
    <member name="M:IronWord.Models.Metadata.FromJson(System.String)">
      <summary>
            Deserialize a JSON string to populate the Metadata object.
            </summary>
      <param name="json">The JSON string.</param>
    </member>
    <member name="T:IronWord.Models.MultiLevelTextList">
      <summary>
            Represents a Multi Level List within the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.MultiLevelTextList.Index">
      <summary>
            Gets the index of this MultiLevelTextList within the parent's list of children.
            </summary>
    </member>
    <member name="P:IronWord.Models.MultiLevelTextList.Items">
      <summary>
            Gets the list of ListItem contained within this MultiLevelTextList.
            </summary>
    </member>
    <member name="P:IronWord.Models.MultiLevelTextList.ListType">
      <summary>
            Gets or sets the type of numbering or bullet for a multilevel list.
            </summary>
    </member>
    <member name="P:IronWord.Models.MultiLevelTextList.StartNumberingValue">
      <summary>
            Gets or sets the starting value for numbering in a multilevel list.
            </summary>
    </member>
    <member name="P:IronWord.Models.MultiLevelTextList.SymbolText">
      <summary>
            Gets or sets the SymbolText for a specific level in a multilevel list.
            </summary>
      <remarks>
            The <see cref="P:IronWord.Models.MultiLevelTextList.SymbolText" /> property defines the format of the numbering or bullet text for a specific level in a multilevel list.
            </remarks>
    </member>
    <member name="P:IronWord.Models.MultiLevelTextList.SymbolTextFontName">
      <summary>
            Gets or sets the SymbolText font for a specific level in a multilevel list.
            </summary>
      <remarks>
            The <see cref="P:IronWord.Models.MultiLevelTextList.SymbolTextFontName" /> property defines the SymbolText font for a specific level in a multilevel list.
            </remarks>
    </member>
    <member name="P:IronWord.Models.MultiLevelTextList.Justification">
      <summary>
            Gets or sets the justification for the text in a multilevel list.
            </summary>
    </member>
    <member name="P:IronWord.Models.MultiLevelTextList.StartIndentation">
      <summary>
            Gets or sets the starting indentation for a multilevel list.
            </summary>
      <remarks>
            The indentation is measured in inches by default and converted to twips when accessed or modified.
            </remarks>
    </member>
    <member name="P:IronWord.Models.MultiLevelTextList.HangingIndentation">
      <summary>
            Gets or sets the hanging indentation for a multilevel list.
            </summary>
      <remarks>
            The indentation is measured in inches by default and converted to twips when accessed or modified.
            </remarks>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.#ctor">
      <summary>
            Initializes a new instance of the MultiLevelTextList class.
            </summary>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.#ctor(IronWord.Models.ListItem[])">
      <summary>
            Initializes a new instance of the MultiLevelTextList class with the specified ListItems as child elements.
            </summary>
      <param name="children">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.AddItem(IronWord.Models.ListItem)">
      <summary>
            Adds a new ListItem to this MultiLevelTextList.
            </summary>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.RemoveItem(IronWord.Models.ListItem)">
      <summary>
            Removes a ListItem from this MultiLevelTextList.
            </summary>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.Clear(IronWord.Models.ListItem)">
      <summary>
            Removes all ListItems from this MultiLevelTextList.
            </summary>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.GetStartIndentation(IronWord.Models.Enums.Units)">
      <summary>
            Gets the starting indentation for a multilevel list.
            </summary>
      <param name="measurementUnit">The measurement unit for the indentation. Default is Twips.</param>
      <returns>The starting indentation value in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.SetStartIndentation(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the starting indentation for a multilevel list.
            </summary>
      <param name="startIndentation">The starting indentation value.</param>
      <param name="measurementUnit">The measurement unit for the indentation. Default is Twips.</param>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.GetHangingIndentation(IronWord.Models.Enums.Units)">
      <summary>
            Gets the hanging indentation for a multilevel list.
            </summary>
      <param name="measurementUnit">The measurement unit for the indentation. Default is Twips.</param>
      <returns>The hanging indentation value in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.SetHangingIndentation(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the hanging indentation for a multilevel list.
            </summary>
      <param name="hangingIndentation">The hanging indentation value.</param>
      <param name="measurementUnit">The measurement unit for the indentation. Default is Twips.</param>
    </member>
    <member name="M:IronWord.Models.MultiLevelTextList.Clone">
      <summary>
            Creates a deep copy of the MultiLevelTextList.
            </summary>
      <returns>A new instance of the MultiLevelTextList with all properties and child elements copied.</returns>
    </member>
    <member name="T:IronWord.Models.PageSetup">
      <summary>
            Represents the page setup and layout settings for a section in the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.PaperSize">
      <summary>
            Gets or sets the paper size.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.Orientation">
      <summary>
            Gets or sets the paper orientation.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.TopMargin">
      <summary>
            Gets or sets the margin size at the top of the page in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.BottomMargin">
      <summary>
            Gets or sets the margin size at the bottom of the page in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.LeftMargin">
      <summary>
            Gets or sets the margin size at the left of the page in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.RightMargin">
      <summary>
            Gets or sets the margin size at the right of the page in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.PageNumberStyle">
      <summary>
            Gets or sets the page numbering style.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.Header">
      <summary>
            Gets or sets height of the page header in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.Footer">
      <summary>
            Gets or sets height of the page footer in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.Gutter">
      <summary>
            Gets or sets print Gutter of the page in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.DifferentFirstPage">
      <summary>
            Gets or sets whether to have different settings for the first page.
            </summary>
    </member>
    <member name="P:IronWord.Models.PageSetup.BackgroundColor">
      <summary>
            Gets or sets the background color for the page.
            </summary>
    </member>
    <member name="M:IronWord.Models.PageSetup.#ctor">
      <summary>
            Initialize a new instance of PageSetup with default settings.
            </summary>
    </member>
    <member name="M:IronWord.Models.PageSetup.GetWidth(IronWord.Models.Enums.Units)">
      <summary>
            Gets the width of the document page.
            </summary>
      <param name="measurementUnit">The desired unit of measurement for the width.</param>
      <returns>The width of the document page in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.PageSetup.GetHeight(IronWord.Models.Enums.Units)">
      <summary>
            Gets the height of the document page.
            </summary>
      <param name="measurementUnit">The desired unit of measurement for the height.</param>
      <returns>The height of the document page in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.PageSetup.SetCustomPaperSize(System.Double,System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets a custom paper size for the document.
            </summary>
      <param name="width">The width of the custom paper size.</param>
      <param name="height">The height of the custom paper size.</param>
      <param name="measurementUnit">The unit of measurement for the custom paper size dimensions.</param>
      <remarks>
            Use this method to set a custom paper size for the document.
            The width and height must be positive values, otherwise, an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the width or height is a negative value.</exception>
    </member>
    <member name="M:IronWord.Models.PageSetup.SetCustomPaperSize(System.Int32,System.Int32)">
      <summary>
            Sets a custom paper size for the document.
            </summary>
      <param name="width">The width of the custom paper size in Inches units.</param>
      <param name="height">The height of the custom paper size in Inches units.</param>
      <remarks>
            Use this method to set a custom paper size for the document.
            The width and height must be positive values, otherwise, an <see cref="T:System.ArgumentOutOfRangeException" /> is thrown.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the width or height is a negative value.</exception>
    </member>
    <member name="M:IronWord.Models.PageSetup.GetTopMargin(IronWord.Models.Enums.Units)">
      <summary>
            Gets the top margin of the document page.
            </summary>
      <param name="measurementUnit">The desired unit of measurement for the top margin.</param>
      <returns>The top margin of the document page in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.PageSetup.SetTopMargin(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the top margin for the document.
            </summary>
      <param name="topMargin">The size of the top margin.</param>
      <param name="measurementUnit">The unit of measurement for the top margin size.</param>
      <remarks>
            Use this method to set the size of the top margin for the document.
            </remarks>
    </member>
    <member name="M:IronWord.Models.PageSetup.GetBottomMargin(IronWord.Models.Enums.Units)">
      <summary>
            Gets the bottom margin of the document page.
            </summary>
      <param name="measurementUnit">The desired unit of measurement for the bottom margin.</param>
      <returns>The bottom margin of the document page in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.PageSetup.SetBottomMargin(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the bottom margin for the document.
            </summary>
      <param name="bottomMargin">The size of the bottom margin.</param>
      <param name="measurementUnit">The unit of measurement for the bottom margin size.</param>
      <remarks>
            Use this method to set the size of the bottom margin for the document.
            </remarks>
    </member>
    <member name="M:IronWord.Models.PageSetup.GetLeftMargin(IronWord.Models.Enums.Units)">
      <summary>
            Gets the left margin of the document page.
            </summary>
      <param name="measurementUnit">The desired unit of measurement for the left margin.</param>
      <returns>The left margin of the document page in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.PageSetup.SetLeftMargin(System.Int32,IronWord.Models.Enums.Units)">
      <summary>
            Sets the left margin for the document.
            </summary>
      <param name="leftMargin">The size of the left margin.</param>
      <param name="measurementUnit">The unit of measurement for the left margin size.</param>
      <remarks>
            Use this method to set the size of the left margin for the document.
            </remarks>
    </member>
    <member name="M:IronWord.Models.PageSetup.GetRightMargin(IronWord.Models.Enums.Units)">
      <summary>
            Gets the right margin of the document page.
            </summary>
      <param name="measurementUnit">The desired unit of measurement for the right margin.</param>
      <returns>The right margin of the document page in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.PageSetup.SetRightMargin(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the right margin for the document.
            </summary>
      <param name="rightMargin">The size of the right margin.</param>
      <param name="measurementUnit">The unit of measurement for the right margin size.</param>
      <remarks>
            Use this method to set the size of the right margin for the document.
            </remarks>
    </member>
    <member name="M:IronWord.Models.PageSetup.GetHeaderHeight(IronWord.Models.Enums.Units)">
      <summary>
            Gets the header height of the document page.
            </summary>
      <param name="measurementUnit">The desired unit of measurement for the header height.</param>
      <returns>The header height  of the document page in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.PageSetup.SetHeaderHeight(System.Int32,IronWord.Models.Enums.Units)">
      <summary>
            Sets the header height for the document.
            </summary>
      <param name="headerHeight">The size of the header height.</param>
      <param name="measurementUnit">The unit of measurement for the header height size.</param>
      <remarks>
            Use this method to set the size of the header height for the document.
            </remarks>
    </member>
    <member name="M:IronWord.Models.PageSetup.GetFooterHeight(IronWord.Models.Enums.Units)">
      <summary>
            Gets the footer height of the document page.
            </summary>
      <param name="measurementUnit">The desired unit of measurement for the footer height.</param>
      <returns>The footer height  of the document page in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.PageSetup.SetFooterHeight(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the footer height for the document.
            </summary>
      <param name="footerHeight">The size of the footer height .</param>
      <param name="measurementUnit">The unit of measurement for the footer height  size.</param>
      <remarks>
            Use this method to set the size of the footer height  for the document.
            </remarks>
    </member>
    <member name="M:IronWord.Models.PageSetup.GetGutter(IronWord.Models.Enums.Units)">
      <summary>
            Gets the gutter size of the document page.
            </summary>
      <param name="measurementUnit">The desired unit of measurement for the gutter size.</param>
      <returns>The gutter size of the document page in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.PageSetup.SetGutter(System.Int32,IronWord.Models.Enums.Units)">
      <summary>
            Sets the gutter size for the document.
            </summary>
      <param name="gutter">The size of the gutter.</param>
      <param name="measurementUnit">The unit of measurement for the gutter size.</param>
      <remarks>
            The gutter size is used to specify additional space on the right margin. 
            It is typically used for binding purposes in printed documents.
            </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the provided gutter size is negative.</exception>
    </member>
    <member name="T:IronWord.Models.Paragraph">
      <summary>
            Represents a paragraph element within the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Paragraph.Index">
      <summary>
            Gets the index of this paragraph within the parent's list of children.
            </summary>
    </member>
    <member name="P:IronWord.Models.Paragraph.Images">
      <summary>
            Gets the list of Images contained within this paragraph.
            </summary>
    </member>
    <member name="P:IronWord.Models.Paragraph.Shapes">
      <summary>
            Gets the list of Shapes contained within this paragraph.
            </summary>
    </member>
    <member name="P:IronWord.Models.Paragraph.Texts">
      <summary>
            Gets the list of Texts contained within this paragraph.
            </summary>
    </member>
    <member name="P:IronWord.Models.Paragraph.Style">
      <summary>
            Gets or sets the style of this paragraph.
            If not specified, it inherits the Document's current/default style.
            </summary>
    </member>
    <member name="P:IronWord.Models.Paragraph.Alignment">
      <summary>
            Gets or sets the alignment and layout settings for this paragraph.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.#ctor">
      <summary>
            Initializes a new instance of the Paragraph class.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.#ctor(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Initializes a new instance of the Paragraph class with the specified child elements.
            </summary>
      <param name="children">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.Paragraph.AddChild(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Adds one or more child content elements to the current content element.
            </summary>
      <param name="children">The content elements to be added as children.</param>
    </member>
    <member name="M:IronWord.Models.Paragraph.AddText(IronWord.Models.Text)">
      <summary>
            Adds a new Run to this paragraph.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.AddText(System.String)">
      <summary>
            Adds a new Text to this paragraph.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.AddImage(IronWord.Models.Image)">
      <summary>
            Adds an image to this paragraph.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.AddImage(System.IO.Stream)">
      <summary>
            Adds an image to this paragraph from a stream.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.AddImage(System.String)">
      <summary>
            Adds an image to this paragraph from a file path.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.AddImage(IronSoftware.Drawing.AnyBitmap)">
      <summary>
            Adds an image to this paragraph.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.AddShape(IronWord.Models.Shape)">
      <summary>
            Adds a shape to this paragraph.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.SetStyle(IronWord.Models.TextStyle)">
      <summary>
            Sets the style for this paragraph.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.SetAlignment(IronWord.Models.Enums.TextAlignment)">
      <summary>
            Sets the alignment for this paragraph.
            </summary>
    </member>
    <member name="M:IronWord.Models.Paragraph.Clone">
      <summary>
            Creates a deep copy of the Paragraph.
            </summary>
      <returns>A new instance of the Paragraph with all properties and child elements copied.</returns>
    </member>
    <member name="T:IronWord.Models.ElementPosition">
      <summary>
            Represents the position of an element with horizontal and vertical coordinates.
            </summary>
    </member>
    <member name="P:IronWord.Models.ElementPosition.X">
      <summary>
            Gets or sets the horizontal coordinate (X) of the element measured in points (1 inch = 72 points).
            </summary>
      <remarks>
            The X coordinate is automatically converted to points (1 inch = 72 points) when getting or setting the value.
            </remarks>
    </member>
    <member name="P:IronWord.Models.ElementPosition.Y">
      <summary>
            Gets or sets the vertical coordinate (Y) of the element measured in points (1 inch = 72 points).
            </summary>
      <remarks>
            The Y coordinate is automatically converted to points (1 inch = 72 points) when getting or setting the value.
            </remarks>
    </member>
    <member name="M:IronWord.Models.ElementPosition.GetXPosition(IronWord.Models.Enums.Units)">
      <summary>
            Gets the horizontal coordinate (X) of the element in the specified measurement unit.
            </summary>
      <param name="measurementUnit">The desired unit of measurement.</param>
      <returns>The horizontal coordinate in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.ElementPosition.SetXPosition(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the horizontal coordinate (X) of the element using the specified value and measurement unit.
            </summary>
      <param name="x">The horizontal coordinate value.</param>
      <param name="measurementUnit">The unit of measurement for the provided value.</param>
    </member>
    <member name="M:IronWord.Models.ElementPosition.GetYPosition(IronWord.Models.Enums.Units)">
      <summary>
            Gets the vertical coordinate (Y) of the element in the specified measurement unit.
            </summary>
      <param name="measurementUnit">The desired unit of measurement.</param>
      <returns>The vertical coordinate in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.ElementPosition.SetYPosition(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the vertical coordinate (Y) of the element using the specified value and measurement unit.
            </summary>
      <param name="y">The vertical coordinate value.</param>
      <param name="measurementUnit">The unit of measurement for the provided value.</param>
    </member>
    <member name="T:IronWord.Models.Run">
      <summary>
            Represents a single run of text within a text content element.
            </summary>
    </member>
    <member name="P:IronWord.Models.Run.Index">
      <summary>
            Gets the index of this Run within the parent's list of children.
            </summary>
    </member>
    <member name="P:IronWord.Models.Run.Style">
      <summary>
            Gets or sets the TextStyle applied to this Run.
            </summary>
    </member>
    <member name="P:IronWord.Models.Run.Images">
      <summary>
            Gets a list of all Image elements nested within this Run.
            </summary>
    </member>
    <member name="P:IronWord.Models.Run.Shapes">
      <summary>
            Gets a list of all Shape elements nested within this Run.
            </summary>
    </member>
    <member name="P:IronWord.Models.Run.Texts">
      <summary>
            Gets a list of all Text elements nested within this Run.
            </summary>
    </member>
    <member name="M:IronWord.Models.Run.#ctor">
      <summary>
            Initializes a new instance of the Run class.
            </summary>
    </member>
    <member name="M:IronWord.Models.Run.#ctor(IronWord.Models.Text[])">
      <summary>
            Initializes a new instance of the Run class with the specified child elements.
            </summary>
      <param name="children">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.Run.#ctor(IronWord.Models.Image[])">
      <summary>
            Initializes a new instance of the Run class with the specified child elements.
            </summary>
      <param name="children">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.Run.#ctor(IronWord.Models.Shape[])">
      <summary>
            Initializes a new instance of the Run class with the specified child elements.
            </summary>
      <param name="children">The child elements to be added.</param>
    </member>
    <member name="M:IronWord.Models.Run.AddImage(IronWord.Models.Image)">
      <summary>
            Adds an Image element to this Run.
            </summary>
      <param name="image">The Image element to add.</param>
    </member>
    <member name="M:IronWord.Models.Run.AddImage(System.IO.Stream)">
      <summary>
            Adds an Image element to this Run using a stream containing the image data.
            </summary>
      <param name="imageStream">The Stream containing the image data.</param>
    </member>
    <member name="M:IronWord.Models.Run.AddImage(System.String)">
      <summary>
            Adds an Image element to this Run using an image path.
            </summary>
      <param name="imagePath">The path to the image file.</param>
    </member>
    <member name="M:IronWord.Models.Run.AddImage(IronSoftware.Drawing.AnyBitmap)">
      <summary>
            Adds an image to this Run.
            </summary>
    </member>
    <member name="M:IronWord.Models.Run.AddShape(IronWord.Models.Shape)">
      <summary>
            Adds an Image element to this Run.
            </summary>
      <param name="shape">The Shape element to add.</param>
    </member>
    <member name="M:IronWord.Models.Run.Clone">
      <summary>
            Creates a deep copy of the Run.
            </summary>
      <returns>A new instance of the Run with all properties and child elements copied.</returns>
    </member>
    <member name="M:IronWord.Models.Run.AddText(IronWord.Models.Text)">
      <summary>
            Adds an Text element to this Run.
            </summary>
      <param name="text">The Text element to add.</param>
    </member>
    <member name="M:IronWord.Models.Run.AddText(System.String)">
      <summary>
            Adds an text content to this Run.
            </summary>
      <param name="text">The text content to add.</param>
    </member>
    <member name="T:IronWord.Models.Shading">
      <summary>
            Represents the shading properties for a table or table cell in a Word document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shading.Color">
      <summary>
            Gets or sets the color of the shading.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shading.Fill">
      <summary>
            Gets or sets the fill color of the shading.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shading.ThemeFillShade">
      <summary>
        <para>Shading Background Theme Color Shade</para>
        <para>Represents the following attribute in the schema: w:themeFillShade</para>
      </summary>
    </member>
    <member name="P:IronWord.Models.Shading.ThemeFill">
      <summary>
        <para>Shading Background Theme Color</para>
        <para>Represents the following attribute in the schema: w:themeFill</para>
      </summary>
    </member>
    <member name="P:IronWord.Models.Shading.ThemeColor">
      <summary>
        <para>Shading Pattern Theme Color</para>
        <para>Represents the following attribute in the schema: w:themeColor</para>
      </summary>
    </member>
    <member name="P:IronWord.Models.Shading.ThemeTint">
      <summary>
            Gets or sets the theme tint for the shading.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shading.ThemeFillTint">
      <summary>
        <para>Shading Background Theme Color Tint</para>
        <para>Represents the following attribute in the schema: w:themeFillTint</para>
      </summary>
    </member>
    <member name="P:IronWord.Models.Shading.ShadingPattern">
      <summary>
            Gets or sets the shading pattern.
            </summary>
    </member>
    <member name="T:IronWord.Models.Shape">
      <summary>
            Represents a shape within the document, primarily defined using SVG format.
            </summary>
    </member>
    <member name="M:IronWord.Models.Shape.#ctor">
      <summary>
            Initializes a new instance of the Shape class.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.Index">
      <summary>
            The Index of this Shape in parent Children list.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.Type">
      <summary>
            Gets or sets the Type of the shape.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.SvgData">
      <summary>
            Gets or sets the SVG data as a string.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.Width">
      <summary>
            Gets or sets the width of the shape in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.Height">
      <summary>
            Gets or sets the height of the shape in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.Name">
      <summary>
            Gets or sets the Name of the shape in the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.FillColor">
      <summary>
            Gets or sets the Fill Color of the shape.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.StrokeColor">
      <summary>
            Gets or sets the Stroke Color of the shape.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.StrokeWeight">
      <summary>
            Gets or sets the StrokeWeight of the shape in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.Id">
      <summary>
            Gets or sets a unique identifier for the shape in the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.Angle">
      <summary>
            Gets or sets rotation Angle for the shape in the document.
            </summary>
      <remarks>
            Unit are 'degrees' with range of values between 0 and 360, any negative or larger values will be normalized to that range.
            </remarks>
    </member>
    <member name="P:IronWord.Models.Shape.HorizontalAlignment">
      <summary>
            Gets or sets the horizontal alignment of the shape within its containing element.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.VerticalAlignment">
      <summary>
            Gets or sets the vertical alignment of the shape within its containing element.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.WrapText">
      <summary>
            Gets or sets the text wrapping behavior around the shape.
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.DistanceFromTop">
      <summary>
            Gets or sets the distance from the top edge of the document to the Shape measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.DistanceFromBottom">
      <summary>
            Gets or sets the distance from the bottom edge of the document to the Shape measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.DistanceFromLeft">
      <summary>
            Gets or sets the distance from the left edge of the document to the Shape measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="P:IronWord.Models.Shape.DistanceFromRight">
      <summary>
            Gets or sets the distance from the right edge of the document to the Shape measured in points (1 inch = 72 points).
            </summary>
    </member>
    <member name="M:IronWord.Models.Shape.FromFile(System.String)">
      <summary>
            Initializes a new instance of the Shape class from a file path containing SVG data.
            </summary>
      <param name="filePath">The path to the SVG file.</param>
    </member>
    <member name="M:IronWord.Models.Shape.#ctor(System.Uri)">
      <summary>
            Initializes a new instance of the Shape class from a URI containing SVG data.
            </summary>
      <param name="uri">The URI or File pointing to the SVG data.</param>
    </member>
    <member name="M:IronWord.Models.Shape.Resize(System.Int32,System.Int32)">
      <summary>
            Resizes the shape.
            </summary>
      <param name="width">New width in points (1 inch = 72 points).</param>
      <param name="height">New height in points (1 inch = 72 points).</param>
    </member>
    <member name="M:IronWord.Models.Shape.Rotate(System.Double)">
      <summary>
            Rotates the shape by a specified angle.
            </summary>
      <param name="angle">The angle in degrees.</param>
      <remarks>
            Unit are 'degrees' with range of values between 0 and 360, any negative or larger values will be normalized to that range.
            </remarks>
    </member>
    <member name="M:IronWord.Models.Shape.FlipHorizontal">
      <summary>
            Flips the shape horizontally.
            </summary>
    </member>
    <member name="M:IronWord.Models.Shape.FlipVertical">
      <summary>
            Flips the shape vertically.
            </summary>
    </member>
    <member name="M:IronWord.Models.Shape.GetWidth(IronWord.Models.Enums.Units)">
      <summary>
            Get Shape width in English Metric Units
            </summary>
      <returns> Shape width in English Metric Units</returns>
    </member>
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.SetWidth(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.GetHeight(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.SetHeight(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.GetDistanceFromTop(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.SetDistanceFromTop(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.GetDistanceFromBottom(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.SetDistanceFromBottom(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.GetDistanceFromLeft(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.SetDistanceFromLeft(System.Double,IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.GetDistanceFromRight(IronWord.Models.Enums.Units)" -->
    <!-- Badly formed XML comment ignored for member "M:IronWord.Models.Shape.SetDistanceFromRight(System.Double,IronWord.Models.Enums.Units)" -->
    <member name="M:IronWord.Models.Shape.Clone">
      <summary>
            Creates a copy of the Shape.
            </summary>
      <returns>A new instance of the Shape with all properties copied.</returns>
    </member>
    <member name="T:IronWord.Models.Style">
      <summary>
            Inherits from TextStyle and provides additional styling options for text within IronWord documents.
            </summary>
    </member>
    <member name="T:IronWord.Models.Table">
      <summary>
            Represents a table element within the document.
            </summary>
    </member>
    <member name="P:IronWord.Models.Table.Index">
      <summary>
            Gets the index of this table within the parent's list of children.
            </summary>
    </member>
    <member name="P:IronWord.Models.Table.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:IronWord.Models.TableRow" /> at the specified row index.
            </summary>
      <param name="row">The index of the row.</param>
      <returns>The <see cref="T:IronWord.Models.TableRow" /> at the specified row index.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Thrown when the specified row index is out of range.</exception>
    </member>
    <member name="P:IronWord.Models.Table.Item(System.Int32,System.Int32)">
      <summary>
            Gets or sets the <see cref="T:IronWord.Models.TableCell" /> at the specified row and column indices.
            </summary>
      <param name="row">The index of the row.</param>
      <param name="column">The index of the column.</param>
      <returns>The <see cref="T:IronWord.Models.TableCell" /> at the specified row and column indices.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Thrown when the specified row or column index is out of range.</exception>
    </member>
    <member name="P:IronWord.Models.Table.Width">
      <summary>
            Gets or sets the width of the table.
            </summary>
    </member>
    <member name="P:IronWord.Models.Table.Rows">
      <summary>
            Gets the list of TableRow elements contained within this table.
            </summary>
    </member>
    <member name="P:IronWord.Models.Table.Style">
      <summary>
            Gets or sets the Style of the table 
            </summary>
    </member>
    <member name="P:IronWord.Models.Table.Shading">
      <summary>
            Gets or sets the Sets the color of the shading and fill of the table.
            </summary>
    </member>
    <member name="P:IronWord.Models.Table.Direction">
      <summary>
            Gets or sets the Direction of the table 
            </summary>
    </member>
    <member name="P:IronWord.Models.Table.MergedCells">
      <summary>
            Gets a list of cell merges applied to the table.
            </summary>
    </member>
    <member name="P:IronWord.Models.Table.Zebra">
      <summary>
            Gets or sets the pair of colors used for applying zebra background to table rows.
            </summary>
    </member>
    <member name="M:IronWord.Models.Table.#ctor">
      <summary>
            Initializes a new instance of the Table class.
            </summary>
    </member>
    <member name="M:IronWord.Models.Table.#ctor(IronWord.Models.TableRow[])">
      <summary>
            Initializes a new instance of the Table class with the specified rows.
            </summary>
      <param name="rows">The table rows to be added.</param>
    </member>
    <member name="M:IronWord.Models.Table.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:IronWord.Models.Table" /> class with the specified number of rows and columns.
            </summary>
      <param name="row">The number of rows in the table.</param>
      <param name="column">The number of columns in each row of the table.</param>
    </member>
    <member name="M:IronWord.Models.Table.AddRow(IronWord.Models.TableRow)">
      <summary>
            Initializes a new instance of the Table class with the specified row.
            </summary>
      <param name="row">The table row to be added.</param>
    </member>
    <member name="M:IronWord.Models.Table.GetWidth(IronWord.Models.Enums.Units)">
      <summary>
            Gets the width of the Table  in the specified measurement unit.
            </summary>
      <param name="measurementUnit">The measurement unit for the width. Default is twentieths of a point (Twips).</param>
      <returns>The width of the Table in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.Table.SetWidth(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the width of the table.
            </summary>
      <param name="width">The width value to set.</param>
      <param name="measurementUnit">The measurement unit of the provided height. Default is twentieths of a point (Twips).</param>
    </member>
    <member name="M:IronWord.Models.Table.GetCellValue(System.Int32,System.Int32)">
      <summary>
            Gets the contents of a specific cell within the table.
            </summary>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
      <returns>A list of ContentElement objects representing the cell's content.</returns>
    </member>
    <member name="M:IronWord.Models.Table.GetCell(System.Int32,System.Int32)">
      <summary>
            Gets the TableCell at the specified row and column indices.
            </summary>
      <param name="row">The index of the row containing the desired TableCell.</param>
      <param name="column">The index of the column containing the desired TableCell.</param>
      <returns>The TableCell at the specified row and column indices.</returns>
    </member>
    <member name="M:IronWord.Models.Table.GetRow(System.Int32)">
      <summary>
            Gets the TableRow at the specified row indices.
            </summary>
      <param name="row">The index of the row in this table.</param>
      <returns>The TableCell at the specified row and column indices.</returns>
    </member>
    <member name="M:IronWord.Models.Table.SetCellValue(System.Int32,System.Int32,IronWord.Models.Abstract.ContentElement)">
      <summary>
            Sets the content of a specific cell within the table.
            </summary>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
      <param name="content">The ContentElement object representing the new content for the cell.</param>
    </member>
    <member name="M:IronWord.Models.Table.RemoveRow(System.Int32)">
      <summary>
            Removes a row from the table.
            </summary>
      <param name="index">The index of the row to be removed.</param>
    </member>
    <member name="M:IronWord.Models.Table.AddColumn">
      <summary>
            Adds a new column to the table.
            </summary>
    </member>
    <member name="M:IronWord.Models.Table.RemoveColumn(System.Int32)">
      <summary>
            Removes a column from the table.
            </summary>
      <param name="index">The index of the column to be removed.</param>
    </member>
    <member name="M:IronWord.Models.Table.MergeCells(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Merges a range of cells within the table.
            </summary>
      <param name="startRow">The starting row index of the merged area (inclusive).</param>
      <param name="startColumn">The starting column index of the merged area (inclusive).</param>
      <param name="endRow">The ending row index of the merged area (inclusive).</param>
      <param name="endColumn">The ending column index of the merged area (inclusive).</param>
    </member>
    <member name="M:IronWord.Models.Table.Split(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Splits a cell in the table into multiple rows and columns.
            </summary>
      <param name="row">The index of the starting row to split.</param>
      <param name="column">The index of the starting column to split.</param>
      <param name="toRow">The number of the row for the split.</param>
      <param name="toColumn">The number of columns for the split.</param>
    </member>
    <member name="M:IronWord.Models.Table.ApplyCellStyle(IronWord.Models.TextStyle,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Applies a specific style to cells within a specified range of the table.
            </summary>
      <param name="style">The style to apply to the cells.</param>
      <param name="startRow">The starting row index for applying the style (inclusive).</param>
      <param name="startColumn">The starting column index for applying the style (inclusive).</param>
      <param name="endRow">The ending row index for applying the style (inclusive).</param>
      <param name="endColumn">The ending column index for applying the style (inclusive).</param>
    </member>
    <member name="M:IronWord.Models.Table.Clone">
      <summary>
            Creates a deep copy of the Table.
            </summary>
      <returns>A new instance of the Table with all properties and child elements copied.</returns>
    </member>
    <member name="M:IronWord.Models.Table.GetEnumerator">
      <summary>
            Provides an enumerator that iterates through all <see cref="T:IronWord.Models.TableCell" /> elements
            in the table, traversing rows and cells.
            </summary>
      <returns>An enumerator for the table cells.</returns>
    </member>
    <member name="M:IronWord.Models.Table.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Provides a non-generic enumerator that iterates through all <see cref="T:IronWord.Models.TableCell" /> elements
            in the table, traversing rows and cells.
            </summary>
      <returns>An enumerator for the table cells.</returns>
    </member>
    <member name="M:IronWord.Models.Table.System#Collections#Generic#IEnumerable{IronWord#Models#TableRow}#GetEnumerator">
      <summary>
            Provides a generic enumerator that iterates through all <see cref="T:IronWord.Models.TableRow" /> elements
            in the table, traversing rows.
            </summary>
      <returns>An enumerator for the table rows.</returns>
    </member>
    <member name="T:IronWord.Models.TableBorders">
      <summary>
            Represents the borders of a table element.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableBorders.LeftBorder">
      <summary>
            Gets or sets the style of the left border.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableBorders.RightBorder">
      <summary>
            Gets or sets the style of the right border.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableBorders.TopBorder">
      <summary>
            Gets or sets the style of the top border.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableBorders.BottomBorder">
      <summary>
            Gets or sets the style of the bottom border.
            </summary>
    </member>
    <member name="M:IronWord.Models.TableBorders.#ctor">
      <summary>
            Initializes a new instance of the TableBorders class.
            </summary>
    </member>
    <member name="T:IronWord.Models.TableCell">
      <summary>
            Represents a cell element within a table.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.Index">
      <summary>
            Gets the index of this cell within the parent row's list of children.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.Width">
      <summary>
            Gets or sets the width of the table cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.GridSpan">
      <summary>
            Gets or sets the Grid span of the table cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.TopMargin">
      <summary>
            Gets or sets the margin size at the top of the page in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.BottomMargin">
      <summary>
            Gets or sets the margin size at the bottom of the page in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.LeftMargin">
      <summary>
            Gets or sets the margin size at the left of the page in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.RightMargin">
      <summary>
            Gets or sets the margin size at the right of the page in Inches.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.Shading">
      <summary>
            Gets or sets the Sets the color of the shading and fill of the table cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.TextAlignment">
      <summary>
            Gets or sets the horizontal alignment of the text content within the cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.VerticalAlignment">
      <summary>
            Gets or sets the vertical alignment of the content within the cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.Contents">
      <summary>
            Gets a list of ContentElement objects representing the content of the cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.FitText">
      <summary>
            Gets or sets the Sets the cell text content feature to fit cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableCell.Paragraphs">
      <summary>
            Gets a list of all Paragraph elements contained within this TableCell.
            </summary>
      <returns>A List object containing all Paragraph elements.</returns>
    </member>
    <member name="P:IronWord.Models.TableCell.Tables">
      <summary>
            Gets a list of all Table elements contained within  this TableCell.
            </summary>
      <returns>A List object containing all Table elements.</returns>
    </member>
    <member name="P:IronWord.Models.TableCell.Charts">
      <summary>
            Gets a list of all Chart elements contained within this TableCell.
            </summary>
      <returns>A List object containing all Chart elements.</returns>
    </member>
    <member name="P:IronWord.Models.TableCell.Texts">
      <summary>
            Gets a list of all Text elements contained within  this TableCell.
            </summary>
      <returns>A List object containing all Text elements.</returns>
    </member>
    <member name="P:IronWord.Models.TableCell.Images">
      <summary>
            Gets a list of all Image elements contained within  this TableCell.
            </summary>
      <returns>A List object containing all Image elements.</returns>
    </member>
    <member name="P:IronWord.Models.TableCell.Shapes">
      <summary>
            Gets a list of all Table elements contained within  this TableCell.
            </summary>
      <returns>A List object containing all Table elements.</returns>
    </member>
    <member name="P:IronWord.Models.TableCell.MultiLevelTextLists">
      <summary>
            Gets a list of all Shape elements contained within  this TableCell.
            </summary>
      <returns>A List object containing all Shape elements.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.#ctor">
      <summary>
            Initializes a new instance of the TableCell class.
            </summary>
    </member>
    <member name="M:IronWord.Models.TableCell.#ctor(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Initializes a new instance of the TableCell class with the specified contents.
            </summary>
      <param name="contents">The ContentElement objects representing the initial contents of the cell.</param>
    </member>
    <member name="M:IronWord.Models.TableCell.GetWidth(IronWord.Models.Enums.Units)">
      <summary>
            Gets the width of the TableCell  in the specified measurement unit.
            </summary>
      <param name="measurementUnit">The measurement unit for the width. Default is twentieths of a point (Twips).</param>
      <returns>The width of the TableCell in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.SetWidth(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Set the width of the TableCell  in the specified measurement unit.
            </summary>
      <param name="width">the width of the TableCell.</param>
      <param name="measurementUnit">The measurement unit for the width. Default is twentieths of a point (Twips).</param>
      <returns>The width of the TableCell in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.AddChild(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Adds one or more child content elements to the current content element.
            </summary>
      <param name="children">The content elements to be added as children.</param>
    </member>
    <member name="M:IronWord.Models.TableCell.InsertCellAfterSelf(IronWord.Models.TableCell)">
      <summary>
            Inserts a new TableCell after this cell within the parent row.
            </summary>
      <param name="cell">The TableCell object to be inserted after this cell.</param>
    </member>
    <member name="M:IronWord.Models.TableCell.InsertCellBeforeSelf(IronWord.Models.TableCell)">
      <summary>
            Inserts a new TableCell before this cell within the parent row.
            </summary>
      <param name="cell">The TableCell object to be inserted before this cell.</param>
    </member>
    <member name="M:IronWord.Models.TableCell.Split(System.Int32,System.Int32)">
      <summary>
            Splits a cell in the table into multiple rows and columns.
            </summary>
      <param name="toRow">The number of the row for the split.</param>
      <param name="toColumn">The number of columns for the split.</param>
    </member>
    <member name="M:IronWord.Models.TableCell.AddParagraph(IronWord.Models.Paragraph)">
      <summary>
            Adds a paragraph to the TableCell.
            </summary>
      <param name="paragraph">The Paragraph to be added.</param>
      <returns>The added Paragraph.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.AddMultiLevelTextList(IronWord.Models.MultiLevelTextList)">
      <summary>
            Adds a multi-level text list to the TableCell.
            </summary>
      <param name="multiLevelTextList">The MultiLevelTextList to be added.</param>
      <returns>The added MultiLevelTextList.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.AddText(IronWord.Models.Text)">
      <summary>
            Adds a Text to the TableCell.
            </summary>
      <param name="text">The Text to be added.</param>
      <returns>The added Text.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.AddText(System.String)">
      <summary>
            Adds text to the TableCell.
            </summary>
      <param name="text">The text to be added.</param>
      <returns>The added Run.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.AddImage(IronWord.Models.Image)">
      <summary>
            Adds an image to the TableCell.
            </summary>
      <param name="image">The Image to be added.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.AddImage(System.IO.Stream)">
      <summary>
            Adds an image to the TableCell.
            </summary>
      <param name="imageStream">The stream image to be loaded.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.AddImage(System.String)">
      <summary>
            Adds an image to the TableCell.
            </summary>
      <param name="imagePath">The physical path of Image to be loaded.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.AddImage(IronSoftware.Drawing.AnyBitmap)">
      <summary>
            Adds an image to this TableCell from an <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.
            </summary>
    </member>
    <member name="M:IronWord.Models.TableCell.AddShape(IronWord.Models.Shape)">
      <summary>
            Adds a shape to the TableCell.
            </summary>
      <param name="shape">The Shape to be added.</param>
      <returns>The added Shape.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.AddTable(IronWord.Models.Table)">
      <summary>
            Adds a table to the TableCell.
            </summary>
      <param name="table">The table to be added.</param>
      <returns>The added Table.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.SetContent(IronWord.Models.Abstract.ContentElement)">
      <summary>
            Sets the content of the TableCell.
            </summary>
      <param name="content">The ContentElement to set as the content of the TableCell.</param>
      <returns>The modified TableCell.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.Clone">
      <summary>
            Creates a deep copy of the TableCell.
            </summary>
      <returns>A new instance of the TableCell with all properties and child elements copied.</returns>
    </member>
    <member name="M:IronWord.Models.TableCell.CloneStruct">
      <summary>
            Creates and returns a new instance of <see cref="T:IronWord.Models.TableCell" /> with the same structure  as the current Cell except contents.
            </summary>
      <returns>A cloned <see cref="T:IronWord.Models.TableCell" /> with the same structure as the current cell with empty content.</returns>
    </member>
    <member name="T:IronWord.Models.TableRow">
      <summary>
            Represents a row element within a table.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableRow.Index">
      <summary>
            The Index of this Shape in parent Children list.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableRow.Item(System.Int32)">
      <summary>
            Gets or sets the TableCell at the specified column index within the row.
            </summary>
      <param name="column">The index of the column within the row.</param>
      <returns>The TableCell at the specified column index.</returns>
    </member>
    <member name="P:IronWord.Models.TableRow.Height">
      <summary>
            Gets or sets the height of the table cell.
            </summary>
    </member>
    <member name="P:IronWord.Models.TableRow.Cells">
      <summary>
            Gets the list of TableCell elements contained within this row.
            </summary>
    </member>
    <member name="M:IronWord.Models.TableRow.#ctor">
      <summary>
            Initializes a new instance of the TableRow class.
            </summary>
    </member>
    <member name="M:IronWord.Models.TableRow.#ctor(IronWord.Models.TableCell[])">
      <summary>
            Initializes a new instance of the TableRow class with the specified cells.
            </summary>
      <param name="cells">The table cells to be added.</param>
    </member>
    <member name="M:IronWord.Models.TableRow.GetHeight(IronWord.Models.Enums.Units)">
      <summary>
            Gets the height of the table row in the specified measurement unit.
            </summary>
      <param name="measurementUnit">The measurement unit for the height. Default is twentieths of a point (Twips).</param>
      <returns>The height of the table row in the specified measurement unit.</returns>
    </member>
    <member name="M:IronWord.Models.TableRow.SetHeight(System.Double,IronWord.Models.Enums.Units)">
      <summary>
            Sets the height of the table row.
            </summary>
      <param name="height">The height value to set.</param>
      <param name="measurementUnit">The measurement unit of the provided height. Default is twentieths of a point (Twips).</param>
    </member>
    <member name="M:IronWord.Models.TableRow.AddCell(IronWord.Models.TableCell)">
      <summary>
            Adds a new TableCell to the row.
            </summary>
      <param name="cell">The TableCell object to be added to the row.</param>
    </member>
    <member name="M:IronWord.Models.TableRow.InsertRowAfterSelf(IronWord.Models.TableRow)">
      <summary>
            Inserts a new TableRow after this row within the parent table.
            </summary>
      <param name="row">The TableRow object to be inserted after this row.</param>
    </member>
    <member name="M:IronWord.Models.TableRow.InsertRowAfterSelf">
      <summary>
            Inserts a new TableRow after this row within the parent table with the same structure (number of cells and their structure) as the current row.
            </summary>
    </member>
    <member name="M:IronWord.Models.TableRow.InsertRowBeforeSelf(IronWord.Models.TableRow)">
      <summary>
            Inserts a new TableRow before this row within the parent table.
            </summary>
      <param name="row">The TableRow object to be inserted before this row.</param>
    </member>
    <member name="M:IronWord.Models.TableRow.InsertRowBeforeSelf">
      <summary>
            Inserts a new TableRow before this row within the parent table with the same structure (number of cells and their structure) as the current row.
            </summary>
    </member>
    <member name="M:IronWord.Models.TableRow.Clone">
      <summary>
            Creates and returns a new instance of <see cref="T:IronWord.Models.TableRow" /> with the same as the current row.
            </summary>
      <returns>A cloned <see cref="T:IronWord.Models.TableRow" /> with the same as the current row.</returns>
    </member>
    <member name="M:IronWord.Models.TableRow.CloneStruct">
      <summary>
            Creates and returns a new instance of <see cref="T:IronWord.Models.TableRow" /> with the same structure (number of cells and their structure) as the current row.
            </summary>
      <returns>A cloned <see cref="T:IronWord.Models.TableRow" /> with the same structure as the current row.</returns>
    </member>
    <member name="M:IronWord.Models.TableRow.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection of TableCell elements in the row.
            </summary>
      <returns>An enumerator that can be used to iterate through the collection of TableCell elements in the row.</returns>
    </member>
    <member name="M:IronWord.Models.TableRow.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection of TableCell elements in the row.
            </summary>
      <returns>An enumerator that can be used to iterate through the collection of TableCell elements in the row.</returns>
    </member>
    <member name="T:IronWord.Models.Text">
      <summary>
            Represents a single run of text within a text content element.
            </summary>
    </member>
    <member name="M:IronWord.Models.Text.#ctor">
      <summary>
            Initializes a new instance of the Text class.
            </summary>
    </member>
    <member name="M:IronWord.Models.Text.#ctor(System.String)">
      <summary>
            Initializes a new instance of the Text class with the specified text content.
            </summary>
      <param name="text">The initial text content of the Text object.</param>
    </member>
    <member name="M:IronWord.Models.Text.Split(System.String)">
      <summary>
            Splits the current Run into smaller Runs based on a delimiter.
            </summary>
      <param name="delimiter">The delimiter to use for splitting.</param>
      <returns>List of Run objects after split.</returns>
    </member>
    <member name="M:IronWord.Models.Text.Append(IronWord.Models.Text)">
      <summary>
            Appends the text content to this Text content.
            </summary>
      <param name="text">The text content to append.</param>
    </member>
    <member name="T:IronWord.Models.TextStyle">
      <summary>
            Represents a set of formatting options for text content.
            </summary>
    </member>
    <member name="P:IronWord.Models.TextStyle.FontFamily">
      <summary>
            Gets or sets the font family to be used for the text.
            </summary>
    </member>
    <member name="P:IronWord.Models.TextStyle.FontSize">
      <summary>
            Gets or sets the size of the font to be used for the text.
            </summary>
    </member>
    <member name="P:IronWord.Models.TextStyle.TextColor">
      <summary>
            Gets or sets the color to be used for the text.
            </summary>
    </member>
    <member name="P:IronWord.Models.TextStyle.IsBold">
      <summary>
            Gets or sets whether the text should be displayed in bold.
            </summary>
    </member>
    <member name="P:IronWord.Models.TextStyle.IsItalic">
      <summary>
            Gets or sets whether the text should be displayed in italics.
            </summary>
    </member>
    <member name="P:IronWord.Models.TextStyle.IsStrikethrough">
      <summary>
            Gets or sets whether the text should have a strikethrough line.
            </summary>
    </member>
    <member name="P:IronWord.Models.TextStyle.IsUnderline">
      <summary>
            Gets or sets whether the text should be underlined.
            </summary>
    </member>
    <member name="P:IronWord.Models.TextStyle.IsSuperscript">
      <summary>
            Gets or sets whether the text should be superscripted.
            </summary>
    </member>
    <member name="P:IronWord.Models.TextStyle.IsSubscript">
      <summary>
            Gets or sets whether the text should be subscripted.
            </summary>
    </member>
    <member name="M:IronWord.Models.TextStyle.SetFontFamily(System.String)">
      <summary>
            Sets the font family to be used for the text.
            </summary>
      <param name="fontFamily">The name of the desired font family.</param>
      <returns>This TextStyle object for method chaining.</returns>
    </member>
    <member name="M:IronWord.Models.TextStyle.SetFontSize(System.Single)">
      <summary>
            Sets the size of the font to be used for the text.
            </summary>
      <param name="fontSize">The size of the font to be used.</param>
      <returns>This TextStyle object for method chaining.</returns>
    </member>
    <member name="M:IronWord.Models.TextStyle.SetTextColor(IronWord.Models.IronColor)">
      <summary>
            Sets the color to be used for the text.
            </summary>
      <param name="color">The IronColor object representing the desired text color.</param>
      <returns>This TextStyle object for method chaining.</returns>
    </member>
    <member name="M:IronWord.Models.TextStyle.Reset">
      <summary>
            Resets all formatting properties to their default values.
            </summary>
      <returns>This TextStyle object for method chaining.</returns>
    </member>
    <member name="M:IronWord.Models.TextStyle.Clone">
      <summary>
            Creates a copy of this TextStyle object.
            </summary>
      <returns>A new TextStyle object with the same formatting properties.</returns>
    </member>
    <member name="T:IronWord.Models.ZebraColor">
      <summary>
            Represents a pair of colors used for applying zebra background to table rows.
            </summary>
    </member>
    <member name="P:IronWord.Models.ZebraColor.Color1">
      <summary>
            Gets or set the first color of the zebra pair.
            </summary>
    </member>
    <member name="P:IronWord.Models.ZebraColor.Color2">
      <summary>
            Gets or set the second color of the zebra pair.
            </summary>
    </member>
    <member name="M:IronWord.Models.ZebraColor.#ctor(IronWord.Models.IronColor,IronWord.Models.IronColor)">
      <summary>
            Initializes a new instance of the <see cref="T:IronWord.Models.ZebraColor" /> class with the specified colors.
            </summary>
      <param name="color1">The first color of the zebra pair.</param>
      <param name="color2">The second color of the zebra pair.</param>
    </member>
    <member name="M:IronWord.Models.ZebraColor.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:IronWord.Models.ZebraColor" /> class with the specified colors.
            </summary>
      <param name="color1">The first color of the zebra pair.</param>
      <param name="color2">The second color of the zebra pair.</param>
    </member>
    <member name="M:IronWord.Models.ZebraColor.#ctor(IronSoftware.Drawing.Color,IronSoftware.Drawing.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:IronWord.Models.ZebraColor" /> class with the specified colors.
            </summary>
      <param name="color1">The first color of the zebra pair.</param>
      <param name="color2">The second color of the zebra pair.</param>
    </member>
    <member name="T:ProtectionType">
      <summary>
            Enumerates the types of protection that can be applied to a document.
            </summary>
    </member>
    <member name="F:ProtectionType.None">
      <summary>
            No protection applied.
            </summary>
    </member>
    <member name="F:ProtectionType.ReadOnly">
      <summary>
            Document is protected from edits, but specific sections or content regions can be exempt.
            </summary>
    </member>
    <member name="F:ProtectionType.CommentsOnly">
      <summary>
            Only comments can be inserted into the document.
            </summary>
    </member>
    <member name="F:ProtectionType.TrackChanges">
      <summary>
            Only track changes is enabled.
            </summary>
    </member>
    <member name="F:ProtectionType.FormFilling">
      <summary>
            Only form fields can be filled out.
            </summary>
    </member>
    <member name="T:WordDocumentProtectionSettings">
      <summary>
            Represents settings for protecting a Word document.
            </summary>
    </member>
    <member name="P:WordDocumentProtectionSettings.Type">
      <summary>
            Gets or sets the type of protection applied to the document.
            </summary>
    </member>
    <member name="P:WordDocumentProtectionSettings.Password">
      <summary>
            Gets or sets the password used for protection. If null, no password is required to unprotect the document.
            </summary>
    </member>
    <member name="P:WordDocumentProtectionSettings.UnprotectedRegions">
      <summary>
            Gets or sets a list of sections or content regions that are exempt from protection.
            </summary>
    </member>
    <member name="P:WordDocumentProtectionSettings.RestrictFormatting">
      <summary>
            Gets or sets a value indicating whether formatting restrictions are applied.
            </summary>
    </member>
    <member name="P:WordDocumentProtectionSettings.AllowedStyles">
      <summary>
            If formatting restrictions are applied, this collection determines which styles are allowed.
            </summary>
    </member>
    <member name="M:WordDocumentProtectionSettings.#ctor">
      <summary>
            Initializes a new instance of the <see cref="!:ProtectionSettings" /> class.
            </summary>
    </member>
    <member name="M:WordDocumentProtectionSettings.#ctor(ProtectionType,System.String)">
      <summary>
            Initializes a new instance of the <see cref="!:ProtectionSettings" /> class with the specified type and password.
            </summary>
      <param name="type">The type of protection.</param>
      <param name="password">The protection password.</param>
    </member>
    <member name="T:UnprotectedRegion">
      <summary>
            Represents a region in a document that is exempt from protection.
            </summary>
    </member>
    <member name="P:UnprotectedRegion.Identifier">
      <summary>
            Gets or sets the identifier or name of the region.
            </summary>
    </member>
    <member name="P:UnprotectedRegion.StartLocation">
      <summary>
            Gets or sets the start location of the region.
            </summary>
    </member>
    <member name="P:UnprotectedRegion.EndLocation">
      <summary>
            Gets or sets the end location of the region.
            </summary>
    </member>
  </members>
  <assembly>
    <name>IronWord</name>
  </assembly>
  <members>
    <member name="M:IronWord.Extensions.ColorHelper.ToHex(IronSoftware.Drawing.Color)">
      <summary>
            Converts a Color object to its hexadecimal representation.
            </summary>
      <param name="c">The Color object to convert.</param>
      <returns>The hexadecimal representation of the color, including alpha channel.</returns>
      <remarks>
            This method considers the opacity of the color and adjusts the RGB values accordingly. This is essential for ensuring the correct hex code is generated for semi-transparent colors.
            </remarks>
    </member>
    <member name="T:IronWord.License">
      <summary>
            Allows IronWord license keys to be applied globally across an application.
            </summary>
    </member>
    <member name="P:IronWord.License.IsLicensed">
      <summary>
            Determines whether this instance of IronWord is Licensed.
            <para>Will return <c>false</c> unless a <see cref="P:IronWord.License.LicenseKey"></see>
            is set to a valid trial or full license key in 
            <see cref="P:IronWord.License.LicenseKey" /> property, <c>Web.Config</c>,
            <c>App.Config</c> or <c>appsettings.json</c> in .Net Core.
            </para><para>
            See https://ironsoftware.com/csharp/excel/licensing/ and 
            https://ironsoftware.com/csharp/excel/docs/license/license-keys/
            </para></summary>
      <returns>
        <c>true</c> if the license key given is valid.</returns>
    </member>
    <member name="P:IronWord.License.LicenseKey">
      <summary>
            Get Licensed at https://ironsoftware.com/csharp/word/licensing/
            <para>
            For .Net framework applications, a license key can alternatively be
            added to <c>Web.Config</c> or <c>App.Config</c> XML file using
            <c>&lt;add key="IronWord.LicenseKey" value="IRONWORD-LICENSE-KEY"/&gt;</c>
            within the appSettings node.
            See https://ironsoftware.com/csharp/word/docs/license/license-keys/
            </para><para>
            For .Net Core applications, a license key  may be added to 
            <c>appsettings.json</c> where the key name is <c>"IronWord.LicenseKey"</c>
            and the value is a valid IronWord trial or full license key.
            </para><para>
            See https://ironsoftware.com/csharp/word/licensing/ for licensing 
            options.
            </para></summary>
    </member>
    <member name="M:IronWord.License.IsValidLicense(System.String)">
      <summary>
            Determines whether a string license key is valid.
            <para>
            See https://ironsoftware.com/csharp/qr/licensing/ for trial,
            development and commercial deployment licensing options.
            </para></summary>
      <param name="licenseKey">IronWord license key as a string</param>
      <returns>
        <c>true</c> if the license key given is valid.</returns>
    </member>
    <member name="M:IronWord.License.DisableAppAnalytics">
      <summary>
            Disables AppAnalytics for IronWord. Limitations apply.
            </summary>
    </member>
    <member name="T:IronWord.WordDocument">
      <summary>
            Represents a Word document containing text, formatting, and other content elements.
            </summary>
    </member>
    <member name="M:IronWord.WordDocument.#ctor">
      <summary>
            Initializes a new instance of the WordDocument class, creating a new blank document.
            </summary>
    </member>
    <member name="M:IronWord.WordDocument.#ctor(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Initializes a new instance of the WordDocument class with the specified content elements.
            </summary>
      <param name="children">The child content elements to be added to the document.</param>
    </member>
    <member name="M:IronWord.WordDocument.#ctor(System.String)">
      <summary>
            Initializes a new instance of the WordDocument class from an existing document file.
            </summary>
      <param name="filePath">The path to the document file.</param>
    </member>
    <member name="P:IronWord.WordDocument.Paragraphs">
      <summary>
            Gets a list of all Paragraph elements contained within the document.
            </summary>
      <returns>A List object containing all Paragraph elements.</returns>
    </member>
    <member name="P:IronWord.WordDocument.Tables">
      <summary>
            Gets a list of all Table elements contained within the document.
            </summary>
      <returns>A List object containing all Table elements.</returns>
    </member>
    <member name="P:IronWord.WordDocument.Charts">
      <summary>
            Gets a list of all Chart elements contained within the document.
            </summary>
      <returns>A List object containing all Chart elements.</returns>
    </member>
    <member name="P:IronWord.WordDocument.MultiLevelTextLists">
      <summary>
            Gets a list of all MultiLevelTextList elements contained within the document.
            </summary>
      <returns>A List object containing all MultiLevelTextList elements.</returns>
    </member>
    <member name="P:IronWord.WordDocument.Texts">
      <summary>
            Gets a list of all TextRun elements contained within the document.
            </summary>
      <returns>A List object containing all TextRun elements.</returns>
    </member>
    <member name="P:IronWord.WordDocument.Images">
      <summary>
            Gets a list of all Images elements contained within the document.
            </summary>
      <returns>A List object containing all Images elements.</returns>
    </member>
    <member name="P:IronWord.WordDocument.Shapes">
      <summary>
            Gets a list of all Shapes elements contained within the document.
            </summary>
      <returns>A List object containing all Shapes elements.</returns>
    </member>
    <member name="M:IronWord.WordDocument.AddText(IronWord.Models.Text)">
      <summary>
            Adds a new TextRun object to the last paragraph of document.
            </summary>
      <param name="textRun">The TextRun object to be added.</param>
    </member>
    <member name="M:IronWord.WordDocument.AddText(System.String)">
      <summary>
            Adds a text to the last paragraph of document.
            </summary>
      <param name="text">The text to be added.</param>
    </member>
    <member name="M:IronWord.WordDocument.AddParagraph(IronWord.Models.Paragraph)">
      <summary>
            Adds a new Paragraph object to the document.
            </summary>
      <param name="paragraph">The Paragraph object to be added.</param>
    </member>
    <member name="M:IronWord.WordDocument.AddForm(IronWord.Models.Form)">
      <summary>
            Adds a new Form object to the document.
            </summary>
      <param name="form">The Form object to be added.</param>
    </member>
    <member name="M:IronWord.WordDocument.AddTable(IronWord.Models.Table)">
      <summary>
            Adds a new Table object to the document.
            </summary>
      <param name="table">The Table object to be added.</param>
    </member>
    <member name="M:IronWord.WordDocument.AddShape(IronWord.Models.Shape)">
      <summary>
            Adds a new Shape object to the document.
            </summary>
      <param name="shape">The Shape object to be added.</param>
    </member>
    <member name="M:IronWord.WordDocument.AddMultiLevelTextList(IronWord.Models.MultiLevelTextList)">
      <summary>
            Adds a new multiLevelTextList object to the document.
            </summary>
      <param name="multiLevelTextList">The multiLevelTextList object to be added.</param>
      <returns>A instance of the added MultiLevelTextList.</returns>
    </member>
    <member name="M:IronWord.WordDocument.AddImage(IronWord.Models.Image)">
      <summary>
            Adds a new Image object to the document.
            </summary>
      <param name="image">The Image object to be added.</param>
    </member>
    <member name="M:IronWord.WordDocument.AddImage(System.IO.Stream)">
      <summary>
            Adds an image to the document.
            </summary>
      <param name="imageStream">The stream image to be loaded.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.WordDocument.AddImage(System.String)">
      <summary>
            Adds an image to the document.
            </summary>
      <param name="imagePath">The physical path of Image to be loaded.</param>
      <returns>The added Image.</returns>
    </member>
    <member name="M:IronWord.WordDocument.AddImage(IronSoftware.Drawing.AnyBitmap)">
      <summary>
            Adds an image to this document from an <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.
            </summary>
    </member>
    <member name="M:IronWord.WordDocument.AddSection">
      <summary>
            Adds a new document section to this document.
            </summary>
    </member>
    <member name="M:IronWord.WordDocument.AddSection(IronWord.Models.DocumentSection)">
      <summary>
            Creates a new DocumentSection object with the specified type and adds it to the document.
            </summary>
      <param name="documentSection">The type of the section to be added.</param>
    </member>
    <member name="M:IronWord.WordDocument.LogObjectTree">
      <summary>
            Initiates logging of the object tree by traversing from the current object.
            </summary>
    </member>
    <member name="M:IronWord.WordDocument.FromMarkdownFile(System.String)">
      <summary>
            Creates a new WordDocument object from a Markdown file.
            </summary>
      <param name="filePath">The path to the Markdown file.</param>
      <returns>A new WordDocument object containing the converted content.</returns>
    </member>
    <member name="M:IronWord.WordDocument.FromMarkdown(System.String)">
      <summary>
            Creates a new WordDocument object from a Markdown string.
            </summary>
      <param name="markDown">The Markdown string to be converted.</param>
      <returns>A new WordDocument object containing the converted content.</returns>
    </member>
    <member name="M:IronWord.WordDocument.ExportToMarkdownFile(System.String)">
      <summary>
            Converts the document content to Markdown and saves it to a file.
            </summary>
      <param name="filePath">The path to save the Markdown file.</param>
    </member>
    <member name="M:IronWord.WordDocument.ExportToPdf(System.String)">
      <summary>
            Converts the document content to PDF and saves it to a file.
            </summary>
      <param name="filePath">The path to save the PDF file.</param>
    </member>
    <member name="M:IronWord.WordDocument.PerformMailMerge(System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
            Performs a mail merge operation on the document, replacing merge fields with data from the provided dictionary.
            </summary>
      <param name="dataSource">A dictionary containing key-value pairs where keys correspond to merge field names and values represent the replacement data.</param>
    </member>
    <member name="M:IronWord.WordDocument.Save">
      <summary>
            Saves the current document to a file. If a file path is not provided, a new temporary file will be created.
            </summary>
    </member>
    <member name="M:IronWord.WordDocument.Save(System.String)">
      <summary>
            Saves the current document to a specific file path.
            </summary>
      <param name="filePath">The full path to the file where the document will be saved.</param>
    </member>
    <member name="M:IronWord.WordDocument.SaveAs(System.String)">
      <summary>
            Saves the current document as a new file with the specified name.
            </summary>
      <param name="filePath">The file path for the new document file.</param>
    </member>
    <member name="M:IronWord.WordDocument.AddChild(IronWord.Models.Abstract.ContentElement[])">
      <summary>
            Adds one or more child content elements to the current document.
            </summary>
      <param name="children">The content elements to be added as children.</param>
    </member>
  </members>
</doc>